,id,body,created_at
0,309970195,It's surprising that functional components are not PureComponent by default...,2017-06-21T05:48:30Z
1,368877149,Speaking of workarounds. I've just added this hack to my jest snapshot tests. ReactDOM.createPortal = node = node ,2018-02-27T13:38:42Z
2,523610642,+1 on bringing back some version of this feature that enables a quick highlevel view of rerenders even for rerenders that are a result of when we update context.,2019-08-21T19:17:47Z
3,557217372,"js return React.cloneElement(child, { innerRef: node = node ? setRefs.set(child.key, node) : setRefs.delete(child.key) }); You're passing the ref via innerRef prop. It should be passed via ref. js return React.cloneElement(child, { ref: node = node ? setRefs.set(child.key, node) : setRefs.delete(child.key) }); Edited by to fix typo.",2019-11-21T18:39:08Z
4,586544137,This warning is absolute idiocy.,2020-02-15T02:20:54Z
5,615871428,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 9decbb0975f2ef981437610094a4932a996924b0: |Sandbox| Source | ||| |[React]( Configuration | ",2020-04-18T13:27:27Z
6,615872314," <! 0 failure: 1 warning: Could not find bu... 1 markdown notices DangerID: dangeridstable; <table <thead <tr <th width=""50""</th <th width=""100%"" datadangertable=""true""Warnings</th </tr </thead <tbody<tr <td</td <tdCould not find build artifacts for base commit: 58c895e59cd2822a9a7a67606d5fe7da5e09ba2a</td </tr </tbody </table Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 9decbb0975f2ef981437610094a4932a996924b0 </p ",2020-04-18T13:31:14Z
7,615872453," <! 0 failure: 1 warning: Could not find bu... 1 markdown notices DangerID: dangeridexperimental; <table <thead <tr <th width=""50""</th <th width=""100%"" datadangertable=""true""Warnings</th </tr </thead <tbody<tr <td</td <tdCould not find build artifacts for base commit: 58c895e59cd2822a9a7a67606d5fe7da5e09ba2a</td </tr </tbody </table Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 9decbb0975f2ef981437610094a4932a996924b0 </p ",2020-04-18T13:31:52Z
8,648752366," For calling async inside useEffect you can use IEFE function javascript useEffect(() = { (async () = { await asyncCall() })() }, []) useEffect return type must be a function or nothing undefined. putting async on useEffect make it to return a Promise which is not a function",2020-06-24T11:01:50Z
9,696081106,"I did something quite similar, Can't remember where I saw the code originally or if I rewrote something from SO I still think building this into react would be very useful. function useIsFirstRender() { const isRenderRef = useRef(true); useEffect(() = { isRenderRef.current = false; }, []); return isRenderRef.current; } export default useIsFirstRender; ",2020-09-21T12:26:45Z
10,726995837,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit e84b363a6d419ef3b53371ecf558bfe29556de91: |Sandbox| Source | ||| |[React]( Configuration | ",2020-11-13T19:43:23Z
11,726997246," <! 0 failure: 1 warning: Build job for bas... 1 markdown notices DangerID: dangeridexperimental; <table <thead <tr <th width=""50""</th <th width=""100%"" datadangertable=""true""Warnings</th </tr </thead <tbody<tr <td</td <tdBuild job for base commit is still pending: fc07b070a09396e60126dd75641472f0c7504edf</td </tr </tbody </table Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against a0e5a86f33cf21dbfdf6f9f19c2d00a2ec53d863 </p ",2020-11-13T19:46:46Z
12,739247167,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit d5767cd6c1bc2a779ed1541d83f34ae11f02c5a3: |Sandbox| Source | ||| |[React]( Configuration | |[recursingengelbart0dwuu]( Issue | ",2020-12-05T12:52:47Z
13,739247560," <! 0 failure: 1 warning: Could not find bu... 1 markdown notices DangerID: dangeridstable; <table <thead <tr <th width=""50""</th <th width=""100%"" datadangertable=""true""Warnings</th </tr </thead <tbody<tr <td</td <tdCould not find build artifacts for base commit: 0db61a08befe6406aa93568708224d1cca2aff7d</td </tr </tbody </table Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against d5767cd6c1bc2a779ed1541d83f34ae11f02c5a3 </p ",2020-12-05T12:56:23Z
14,739247603," <! 0 failure: 1 warning: Could not find bu... 1 markdown notices DangerID: dangeridexperimental; <table <thead <tr <th width=""50""</th <th width=""100%"" datadangertable=""true""Warnings</th </tr </thead <tbody<tr <td</td <tdCould not find build artifacts for base commit: 0db61a08befe6406aa93568708224d1cca2aff7d</td </tr </tbody </table Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against d5767cd6c1bc2a779ed1541d83f34ae11f02c5a3 </p ",2020-12-05T12:56:47Z
15,751198583,mark,2020-12-25T07:37:49Z
16,752116059,Bump.,2020-12-29T15:14:56Z
17,753513631,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 829073262c78859f156a93456b8c5fa8e0462f68: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-02T18:38:09Z
18,753513933," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 829073262c78859f156a93456b8c5fa8e0462f68 </p ",2021-01-02T18:41:11Z
19,753513973," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 829073262c78859f156a93456b8c5fa8e0462f68 </p ",2021-01-02T18:41:31Z
20,754067710,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit f49efc86bdea3e6bf1d4935013c80361ca65bcda: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-04T16:14:28Z
21,754090720," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against f49efc86bdea3e6bf1d4935013c80361ca65bcda </p ",2021-01-04T16:55:51Z
22,754090864," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against f49efc86bdea3e6bf1d4935013c80361ca65bcda </p ",2021-01-04T16:56:07Z
23,754126769,"This is impacting user who uses mobx as their state management, as each of component should be wrapped with observer. I noticed that this problem only affect [snowpack]( project, [CRA]( are fine. When component is wrapped in observer, fastrefresh does not work.",2021-01-04T18:05:00Z
24,754338803," sorry for the slow reply. That's a good point, let me think about it. at the very least I want to make sure whatever design we pick here doesn't clash with the possibility of doing that in the future, even if we decide not to implement it now.",2021-01-05T02:09:10Z
25,754494934,"Looks like this is unrelated to React and even JavaScript since the error message comes from Java. Please provide a CodeSandbox ( a link to a repository on GitHub, or provide a minimal code example that reproduces the problem. Here are some tips for providing a minimal example: <! mui template: <! react template: ",2021-01-05T08:44:52Z
26,754540668,"Hi ! Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign at < If you are contributing on behalf of someone else (eg your employer), the individual CLA may not be sufficient and your employer may need to sign the corporate CLA. If you have received this in error or have any questions, please contact us at [cla.com](mailto:cla.com?subject=CLA%20for%20facebook%2Freact%20%2320546). Thanks!",2021-01-05T10:09:55Z
27,754542386,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 27a7be030bb51c47aead7b6c8790f8d327cc5886: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-05T10:13:22Z
28,754544252," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 27a7be030bb51c47aead7b6c8790f8d327cc5886 </p ",2021-01-05T10:16:58Z
29,754544681," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 27a7be030bb51c47aead7b6c8790f8d327cc5886 </p ",2021-01-05T10:17:47Z
30,754549442,Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!,2021-01-05T10:27:59Z
31,754600189,"With all the respect, wrapper doesn't sound like cheating, it is cheating. Tree shaking and other tools to analyze code which know only about ES6 modules semantics won't fully work with it ever. If there will be major release of React, I think it will be more beneficial for community to go with correct ES6 modules and namedonly exports, that's what versioning is about to do breaking changes if they are really necessary. If there is problem with tooling (to bundle two versions or other issue) it should be probably fixed on tooling side. ",2021-01-05T12:15:51Z
32,754629378," tree shaking works equally well with CJS, it's just not enabled by default in the popular bundlers, so they could already handle things without any ESM whatsoever if it was important to do so. The problem that needs fixing on the tooling side is ""treeshaking often only works with ESM by default"".",2021-01-05T13:16:21Z
33,754663867,Will this style also might produce the same issue? export default withStyles(appStyle)(App); ,2021-01-05T14:19:44Z
34,754716439,"Since dynamic imports exist, wellbehaved libraries are required anyways.",2021-01-05T15:43:31Z
35,754718201,"Putting it in another words, you just create a component, which receives isVisible prop and renders children if passed expression evaluates to true. ts import React from 'react'; type ConditionalWrapperProps = { isVisible: boolean; children: React.ReactNode; }; const ConditionalWrapper = (props: ConditionalWrapperProps) = (props.isVisible ? <{props.children}</ : <</); export default ConditionalWrapper; ",2021-01-05T15:46:24Z
36,754721780,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 5643c33f731e22a8863cb2ea16bfb942d69f47c6: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-05T15:52:10Z
37,754724143," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 5643c33f731e22a8863cb2ea16bfb942d69f47c6 </p ",2021-01-05T15:55:57Z
38,754724960," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 5643c33f731e22a8863cb2ea16bfb942d69f47c6 </p ",2021-01-05T15:57:16Z
39,754745936,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit cf267fe40f749694f8ecb4b68d1cad907cc58d03: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-05T16:30:18Z
40,754749203," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against cf267fe40f749694f8ecb4b68d1cad907cc58d03 </p ",2021-01-05T16:35:26Z
41,754759925," Unfortunately, I've decided to also remove the accessibility directory from the React repository for now About a year later, I'd like to ask if there's any plan or progress to bring these back.",2021-01-05T16:54:25Z
42,754830883,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 4972f76c2af4d3698deecbda825cd3069bf81843: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-05T18:54:25Z
43,754833070," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 4972f76c2af4d3698deecbda825cd3069bf81843 </p ",2021-01-05T18:58:41Z
44,754833338," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 4972f76c2af4d3698deecbda825cd3069bf81843 </p ",2021-01-05T18:59:09Z
45,754834930,"The reason this was fixed is because for some reason, before, we only did the check in commitLifeCycles, and not flushPassiveEffectsImpl (see [here]( Now we always create the effect in commitHookEffectListMount, so the check is always run.",2021-01-05T19:02:05Z
46,754841924,"In my case, the text was already rendering in the span tag. However, what worked for me is adding a key attribute to my span tag.",2021-01-05T19:15:22Z
47,754873329,"Hi ! Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign at < If you are contributing on behalf of someone else (eg your employer), the individual CLA may not be sufficient and your employer may need to sign the corporate CLA. If you have received this in error or have any questions, please contact us at [cla.com](mailto:cla.com?subject=CLA%20for%20facebook%2Freact%20%2320551). Thanks!",2021-01-05T20:14:52Z
48,754874747,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 2e20506f4b96eb1a5e925a70873e528ebaf6e3a0: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-05T20:17:28Z
49,754876381," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 2e20506f4b96eb1a5e925a70873e528ebaf6e3a0 </p ",2021-01-05T20:20:47Z
50,754876511," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 2e20506f4b96eb1a5e925a70873e528ebaf6e3a0 </p ",2021-01-05T20:21:02Z
51,754892838,Nice find! This is technically a breaking change so we should wrap it in a flag. Will turn on before 18.,2021-01-05T20:53:50Z
52,754893133,Oh nvm it's just a warning?,2021-01-05T20:54:26Z
53,754932965,Tests were failing b'c we never enabled cache for experimental test renderer builds (so the hook was missing).,2021-01-05T22:10:39Z
54,754944183,bumb,2021-01-05T22:36:44Z
55,755029276,"Hi ! Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign at < If you are contributing on behalf of someone else (eg your employer), the individual CLA may not be sufficient and your employer may need to sign the corporate CLA. If you have received this in error or have any questions, please contact us at [cla.com](mailto:cla.com?subject=CLA%20for%20facebook%2Freact%20%2320552). Thanks!",2021-01-06T02:08:08Z
56,755030122,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit e16a67abdb33074e4c8e08f436fb770064a1b199: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-06T02:10:42Z
57,755031425," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against e16a67abdb33074e4c8e08f436fb770064a1b199 </p ",2021-01-06T02:14:45Z
58,755031657," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against e16a67abdb33074e4c8e08f436fb770064a1b199 </p ",2021-01-06T02:15:30Z
59,755116192,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 27e5f633dc5f1ea6026db81f9b39eb9687945ec0: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-06T06:42:03Z
60,755119524,"This is the default dom behavior, unrelated to React. [HTMLSelectElement.value]( A DOMString reflecting the value of the form control. Returns the value property of the first selected option element if there is one, otherwise the empty string. You can use [HTMLSelectElement.selectedOptions]( to get the selected options which is a HTMLCollection. See the updated example: [",2021-01-06T06:50:18Z
61,755138689,"I'd expect this to fail Flow without the changes to ReactNativeTypes. Also, you'll want to add some unit tests for these (React has unit tests!) You can check out the history of those files to find previous PRs I've made for examples of how to write tests",2021-01-06T07:38:32Z
62,755139703,"If you'd like to roll this out incrementally, you could add the Fabric implementation behind a React feature flag, and if the flag is false have it use the Paper implementation. Then you can migrate JS callsites to the new api now without waiting for the native fabric code to have that method yet. ",2021-01-06T07:41:29Z
63,755160052,Please experiment with markdown (e.g. or pull requests (see for further documentation) on a personal repository. Opening PRs creates notifications for maintainers and everyone watching this repository.,2021-01-06T08:29:20Z
64,755161954,Answered on StackOverflow. but I am unable to get any answer for this question from stackoverflow You can't expect a satisfying answer to your question within a day on StackOverflow. You might also be interested in existing issues: ,2021-01-06T08:33:18Z
65,755166048,Perfectly answered in ,2021-01-06T08:42:56Z
66,755168252,Please experiment with markdown (e.g. or pull requests (see for further documentation) on a personal repository. Opening PRs creates notifications for maintainers and everyone watching this repository.,2021-01-06T08:47:47Z
67,755171595,"Thanks for answering. Have accepted your answer . Will follow the linked issue. You can't expect a satisfying answer to your question within a day on StackOverflow. Sorry about that  , was in a bit of deadline that's why. But will keep in mind for future. Btw is there any interest towards enabling github discussions on this repo ? Because lots of issues could belong better in Github discussions. ",2021-01-06T08:54:49Z
68,755295957,Shouldn’t we be deprecating method calls on host instances in favor of module level calls that pass an instance anyway? Why do this in two steps instead of just deprecating the calls directly in both places and add the third? You’d make people migrate to this only to migrate away later.,2021-01-06T13:22:19Z
69,755341327,"Thanks for the report. This behavior changed in React 17 intentionally. A workaround is explained in the [React 17 Release candidate blog post]( jsx export default function Blah() { const node = useRef() useEffect(() = { const currentNode = node.current; return () = { console.log(currentNode) } }, []) return ( <div ref={node} ... </div ) } ",2021-01-06T14:47:42Z
70,755341845,"Oh, looks like I didn't notice that. Thx.",2021-01-06T14:48:37Z
71,755351171,"Hi ! Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign at < If you are contributing on behalf of someone else (eg your employer), the individual CLA may not be sufficient and your employer may need to sign the corporate CLA. If you have received this in error or have any questions, please contact us at [cla.com](mailto:cla.com?subject=CLA%20for%20facebook%2Freact%20%2320556). Thanks!",2021-01-06T15:03:58Z
72,755352650,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 423800ee089d1a556edae4ea827c88e494c8965a: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-06T15:06:15Z
73,755355199," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 423800ee089d1a556edae4ea827c88e494c8965a </p ",2021-01-06T15:10:29Z
74,755355300," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 423800ee089d1a556edae4ea827c88e494c8965a </p ",2021-01-06T15:10:39Z
75,755368319,Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!,2021-01-06T15:31:21Z
76,755430458,"Hey , simply add overflowanchor: none; on list element. More on this [here]( and [here]( This behavior is not related to react.",2021-01-06T17:04:33Z
77,755571247," Shouldn’t we be deprecating method calls on host instances in favor of module level calls that pass an instance anyway? Why do this in two steps instead of just deprecating the calls directly in both places and add the third? You’d make people migrate to this only to migrate away later. Just trying to understand this does that mean we no longer want to be calling functions like ref.measure, ref.blur() etc? Are we planning to deprecate these too? What's the new way?",2021-01-06T19:35:39Z
78,755649508,"I'm not sure what the latest API proposal is but it should be something like instead of ref.measure(...) it would be LayoutSomethingSomething.measure(ref, ...), and instead of ref.blur() it would be FocusManagerOrSomething.blur(ref).",2021-01-06T20:32:19Z
79,755727665," Eli's proposal is here: I will be updating this PR to remove methods from the HostComponent API, and follow a pattern similar to viewCommands.",2021-01-06T21:32:49Z
80,755823439," is it accurate to say that by switching from v9 to v11, in order to add support for one OS, it broke support for another OS?",2021-01-07T01:24:12Z
81,755870429,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit f9cc0ba618dcc5aa34082e484e6d76e99127ed15: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-07T04:08:41Z
82,755871684," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against f9cc0ba618dcc5aa34082e484e6d76e99127ed15 </p ",2021-01-07T04:13:23Z
83,755871811," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against f9cc0ba618dcc5aa34082e484e6d76e99127ed15 </p ",2021-01-07T04:13:46Z
84,755875689,Made some updates. Will add tests later.,2021-01-07T04:28:08Z
85,755912183,This repo is for issues with React itself. Please create this issue in the Create React App repo with a repo we can use to reproduce.,2021-01-07T06:20:08Z
86,756038095,can you merge the fix with a feature flag? (i.e. enableable from settings) I'm having the __REACT_DEVTOOLS_GLOBAL_HOOK__ fix and I want to remove it!,2021-01-07T10:44:56Z
87,756139945,"No. If there was a simple fix that just needed to be merged, it would have been merged already. Both previous attempts to fix this have needed to be reverted because they've caused unexpected problems. Regardless, the fix is not something that could be enabled/disabled via a setting– because it requires changes to things like the extension manifest JSON.",2021-01-07T14:11:54Z
88,756141270,"No? What Os was broken by the switch from v9 to v11? We haven't even released that change yet. This issue was broken prior to that upgrade. My point in mentioning it was that– beyond upgrading to the latest Electron, there isn't much we can do on our end (short of a major rewrite to move away from Electron entirely which we don't have the bandwidth for).",2021-01-07T14:14:05Z
89,756185455,"I'm sorry you experienced this bug!  Looks like this problem was already reported though () so I'm going to mark this issue as a duplicate and close it. If you have additional context that might help us repro this problem, please leave a comment on the other issue! Thank you",2021-01-07T15:27:25Z
90,756186827,I'd welcome a PR that updates the README for standalone to add a section for Debian.,2021-01-07T15:29:24Z
91,756199638,"This is not an issue of React itself because React doesn't have any type definition for TypeScript in the repository. I think you should file the issue to which is the repository that maintains /react and /reactdom, or ",2021-01-07T15:49:27Z
92,756208983,"The effect is using handler so it should be included in the deps array. The effect hook is not the same mental model as the lifecycle methods class components have. I highly recommend reading the blog post to understand the concept of the effect model. If you have confidence for the usage and want to keep the deps array empty, you can disable the warning by eslintdisablenextline reacthooks/exhaustivedeps ",2021-01-07T16:04:11Z
93,756212757,Stop using npm link and use [yalc]( if you want to save yourself hours of misery,2021-01-07T16:10:04Z
94,756280910,Answered in ,2021-01-07T18:01:27Z
95,756338324,"Thanks for the PR, but we generally don't take PRs that make things ""cleaner"". They very rarely help and usually tend to introduce subtle bugs. In general, we prefer verbose lowlevel code that's inlined instead of outlined helpers even when they're more legible.",2021-01-07T19:41:27Z
96,756339423,"Thanks for the PR! Do you know if the demo fully runs on Node 12 after this? I'm not sure how useful this is in practice since these packages won't be productionready for a while, and 14 is LTS anyway. ",2021-01-07T19:43:15Z
97,756357972,hey I beleive that the demo does fully run on Node 12 after this change (and the one I sent to the demo)... although to be honest I didn't test it out extensively.,2021-01-07T20:15:54Z
98,756366155,I would love to work on this issue.,2021-01-07T20:31:28Z
99,756437676,we had two versions of React being installed in a monorepo. needed to use metro's blacklistRE field and alias react to root node_modules,2021-01-07T22:58:19Z
100,756499388,Here's another similar discussion: ,2021-01-08T02:03:49Z
101,756508521, Got it. Thanks for your explanation.,2021-01-08T02:36:02Z
102,756525895,"Intermediate thing to get you all through. My tests seem to confirm it's all good, but still, use with caution. js import {useEffect, useRef} from 'react'; const equal = (a: unknown[], b: unknown[]): boolean = { if(a === b) return true; if(a.length !== b.length) return false; return a.every((e,i) = Object.is(e,b[i])); }; export const useEffectVariadic = (create: () = (() = void)|void, deps: unknown[]): void = { const prevDeps = useRef<unknown[]([]); const count = useRef<number(0); if(!equal(prevDeps.current, deps)) count.current++; prevDeps.current = deps; useEffect(create, [count.current]); }; // usage like normal useEffect useEffectVariadic(() = { console.log(""hi""); }, variableLengthArrayOfStuff); ",2021-01-08T03:35:19Z
103,756550957,Thanks for the report. I was unable to reproduce this issue with codesandbox ( It seems to me that this is not caused by React but your build tool (e.g. createreactapp or next.js or a custom webpack config). I recommend that you file an issue in the repositories responsible for those tools. Be sure to include a minimal reproducible example.,2021-01-08T05:15:03Z
104,756797963, 1. It worked the first time I ran it. 2. Then I added useRef and console for debugging (don't think is related to the but might help) Unfortunately these steps aren't going to help us repro the bug being reported here. Can you please provide a link to the code that you're running when this happens?,2021-01-08T14:56:28Z
105,756829931," there are only 5 calls to fs promise APIs that were causing issues with the built in flow definitions. I've pushed f49efc8 which ignores types for those 5 calls so we can remove all the custom type information related to fs / promises and rely entirely on the builtin types elsewhere. Unsure if this approach is preferable, feel free to drop the commit and force push if you don't like the approach.",2021-01-08T15:52:16Z
106,756919985,Sorry closed it by mistake. I added repo link and some more steps to reproduce it.,2021-01-08T18:20:55Z
107,756920903,"Good explanation , thanks!",2021-01-08T18:22:38Z
108,756922653,Thank you. That would be very helpful.,2021-01-08T18:26:06Z
109,756925267,"Do you mean the messenger.com homepage? That works for me. <img width=""987"" alt=""Screen Shot 20210108 at 1 31 13 PM"" src="" ",2021-01-08T18:31:36Z
110,756926524,"Hey , if you can't reproduce this without testinglibrary, I recommend tracking this in the issue you created there in If this ends up being a bug in React let us know.",2021-01-08T18:34:00Z
111,756927241,"It just started working again for me, yet now it shows up with ""Anonymous"" under the compiler section, which is different then what I used to see. Thank you for your help and quick response! On Fri, Jan 8, 2021, 10:31 AM Ricky <notifications.com wrote: Do you mean the messenger.com homepage? That works for me. [image: Screen Shot 20210108 at 1 31 13 PM] < — You are receiving this because you authored the thread. Reply to this email directly, view it on GitHub < or unsubscribe < . ",2021-01-08T18:35:21Z
112,756927727,Also can't repro and React doesn't really touch CSS files directly says. Closing until there's more information that shows this is a React issue.,2021-01-08T18:36:24Z
113,756935091,No sweat!,2021-01-08T18:52:57Z
114,756989204,"Encountered this issue while using an SVG image with many paths (in my case the 4631 paths are rendered ok, but when I add one more I got the dev tools error). react_devtools_backend.js:5158 Uncaught RangeError: Maximum call stack size exceeded at shouldFilterFiber (react_devtools_backend.js:5158) at mountFiberRecursively (react_devtools_backend.js:5820) at mountFiberRecursively (react_devtools_backend.js:5880) at mountFiberRecursively (react_devtools_backend.js:5880) at mountFiberRecursively (react_devtools_backend.js:5880) I import the svg using: import { ReactComponent as Map } from './map.svg'; ",2021-01-08T20:43:10Z
115,757056793,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 0e9ccb78c131f74faf7d2a7102d792170a3b653c: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-09T00:10:08Z
116,757057906," <! 0 failure: 1 warning: Could not find bu... 1 markdown notices DangerID: dangeridstable; <table <thead <tr <th width=""50""</th <th width=""100%"" datadangertable=""true""Warnings</th </tr </thead <tbody<tr <td</td <tdCould not find build artifacts for base commit: 8e5adfbd7e605bda9c5e96c10e015b3dc0df688e</td </tr </tbody </table Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 0e9ccb78c131f74faf7d2a7102d792170a3b653c </p ",2021-01-09T00:14:53Z
117,757057938," <! 0 failure: 1 warning: Could not find bu... 1 markdown notices DangerID: dangeridexperimental; <table <thead <tr <th width=""50""</th <th width=""100%"" datadangertable=""true""Warnings</th </tr </thead <tbody<tr <td</td <tdCould not find build artifacts for base commit: 8e5adfbd7e605bda9c5e96c10e015b3dc0df688e</td </tr </tbody </table Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 0e9ccb78c131f74faf7d2a7102d792170a3b653c </p ",2021-01-09T00:15:03Z
118,757067862,how about set esModule to true ?,2021-01-09T01:02:05Z
119,757073240,"Your issue may be because your __html top most element is a <p tag, and you are using dangerouslySetInnerHTML on a <p tag. I also ran into this issue, and found that using a outermost <span tag fixes the issue.",2021-01-09T01:33:54Z
120,757108647, ;) Is this working with ReactJs or NodeJs?,2021-01-09T07:09:58Z
121,757120538,I'm not sure but it could be here because of IE11.,2021-01-09T09:11:31Z
122,757122454, I'm not sure but it could be here because of IE11. I think the function might have made the compatibility for IE11.,2021-01-09T09:28:54Z
123,757129105, Thanks for the feedback. I will close this,2021-01-09T10:29:38Z
124,757349019,"style={{ ""bordercolor"": ""black"" }}, also solves the problem",2021-01-09T18:37:30Z
125,757359461,"Since these are all subjective nits that don't seem to alter or clarify the original meaning, I'm going to close. But thanks for your suggestions.",2021-01-09T20:00:29Z
126,757360324,"Since these are all subjective nits that don't seem to alter or clarify the original meaning, I'm going to close. But thanks for your suggestions.",2021-01-09T20:07:30Z
127,757370118,"In this instance yes, however the behaviour wanted is to actually ""unset"" the CSS variable, having the border change to black is merely the effect of unsetting.",2021-01-09T21:31:12Z
128,757401807,"Can you reproduce this issue with React only (not using Gatsby)? If not, then it's probably a Gatsby bug. Since you've filed it as a Gatsby bug, I suggest closing this issue (unless you're able to reduce the repro to be React only).",2021-01-10T02:29:18Z
129,757406524,"I have got the same error. My problem was the manual setting this.updater = null in my class constructor, but when I renamed it, problem solved.",2021-01-10T03:20:28Z
130,757417073,"Hi ! Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign at < If you are contributing on behalf of someone else (eg your employer), the individual CLA may not be sufficient and your employer may need to sign the corporate CLA. If you have received this in error or have any questions, please contact us at [cla.com](mailto:cla.com?subject=CLA%20for%20facebook%2Freact%20%2320567). Thanks!",2021-01-10T05:04:54Z
131,757417397,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit faa4481c2da601658e7d3242df6a139654964492: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-10T05:07:07Z
132,757417669," <! 0 failure: 1 warning: Could not find bu... 1 markdown notices DangerID: dangeridexperimental; <table <thead <tr <th width=""50""</th <th width=""100%"" datadangertable=""true""Warnings</th </tr </thead <tbody<tr <td</td <tdCould not find build artifacts for base commit: ebb2253428315bfa3237df403082b0d2ec2f9c5c</td </tr </tbody </table Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against faa4481c2da601658e7d3242df6a139654964492 </p ",2021-01-10T05:09:12Z
133,757417876," <! 0 failure: 1 warning: Could not find bu... 1 markdown notices DangerID: dangeridstable; <table <thead <tr <th width=""50""</th <th width=""100%"" datadangertable=""true""Warnings</th </tr </thead <tbody<tr <td</td <tdCould not find build artifacts for base commit: ebb2253428315bfa3237df403082b0d2ec2f9c5c</td </tr </tbody </table Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against faa4481c2da601658e7d3242df6a139654964492 </p ",2021-01-10T05:10:58Z
134,757443631,"Issue with Gatsby and hydration, I will close this.",2021-01-10T09:17:08Z
135,757530657,"Thanks for your work, but these benchmarks for an isolated function without context are often [misleading]( Happy to revisit if you can show that this function is the bottleneck in this code.",2021-01-10T19:33:00Z
136,757531814,"Hey , thanks for taking time to write out this proposal. Isn't this what [React.memo]( does already?",2021-01-10T19:41:51Z
137,757587840,Also see: ,2021-01-11T01:57:57Z
138,757660578,"Thanks for the report. As you already discovered, this issue was already reported in createreactapp where it was identified that the issue is with ( I recommend opening an issue in as this issue is not actionable from within the React repository. A fix or workaround is only viable from the createreactapp or optimizecssassetswebpackplugin repository.",2021-01-11T06:52:46Z
139,757734259,"Hi ! Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign at < If you are contributing on behalf of someone else (eg your employer), the individual CLA may not be sufficient and your employer may need to sign the corporate CLA. If you have received this in error or have any questions, please contact us at [cla.com](mailto:cla.com?subject=CLA%20for%20facebook%2Freact%20%2320571). Thanks!",2021-01-11T08:45:20Z
140,757738994,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 6763a1cb0dfa5f2783c8cd88b294f9d6807f36f1: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-11T08:48:44Z
141,757743991," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 6763a1cb0dfa5f2783c8cd88b294f9d6807f36f1 </p ",2021-01-11T08:52:20Z
142,757744521," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 6763a1cb0dfa5f2783c8cd88b294f9d6807f36f1 </p ",2021-01-11T08:52:42Z
143,757812415,"Thanks for the detailed report with reproduction! If I understood it correctly then you're dispatching in the reducer. I would consider calling dispatch in a [reducer a sideeffect which is not allowed in React]( I think you need to wrap the dispatch and call the middleware when you want to dispatch not when you're ""reducing"".",2021-01-11T09:41:53Z
144,757813660,Please experiment with markdown (e.g. or pull requests (see for further documentation) on a personal repository. Opening PRs creates notifications for maintainers and everyone watching this repository.,2021-01-11T09:42:43Z
145,757819208,"Thanks for the report. It's mistakenly reporting warnings thinking the tests update the react state, but we don't. It's not clear from the code you posted that the code isn't doing any state updates. Could you reduce this as much as possible so that we end up with a single test and every bit of component code visible in the repro? Otherwise it'll be very hard to identify how that false positive was produced.",2021-01-11T09:46:17Z
146,757854268,"Could you clarify what's a react state update in this context? Every single test throw this warning, so any of them will be a good place to experiment. I can make a repro with the smallest possible code for easier understanding too, I'll do that now.",2021-01-11T10:18:26Z
147,757858260,I've updated the description and added a proper reproduction branch/PR on my own repository.,2021-01-11T10:25:48Z
148,757868321,"React.memo can't prevent _unmountandmount_ of HeavyComponent. jsx const HeavyComponent = React.memo(() = { useEffect(() = { console.log(""mount!"") }, []); return <spanhi</span }); If HeavyComponent is implemented in this way, every time state in C changes, we'll see ""mount!"" message.",2021-01-11T10:45:42Z
149,757871223, never noticed it was possible to edit the keys. :) Would something like doubleclicking the key to make it editable be better? Looking at the sources tab in Chrome it is not possible to edit a variable name there when debugging. The same goes for the debug panel in VS Code. Both of them supports collapse/extend when clicking the keys. In Chrome you doubleclick on the value to edit it; In VS Code you can double click on either key or value to edit the value.,2021-01-11T10:51:32Z
150,757888921,"Why not to simply expose functions like renderA and renderB instead? Or you can expose default props for each variant: javascript function Cmp() { const defaultProps = state ? defaultPropsA : defaultPropsB const props = { ...defaultProps, customProp: ""foo"" } return <HeavyComponent {...props} } Or pass a prop that denotes specific variant javascript function HeavyComponentOfType({ type, ...props }) { switch (type) { case ""A"": return (<HeavyComponent someProp=""true"" {...props}); case ""B"": return (<HeavyComponent someProp=""false"" {...props}); default: (() = throw new Error('Unknown type'))() } } ",2021-01-11T11:24:37Z
151,758055669,"The repro case you've provided isn't sufficient to trigger the error you've reported. Here's a Code Sandbox: Can you modify it so the bug can be reproduced? By the way, you are not removing the ""mousewheel"" event listener in an effect cleanup function, which will be expected to cause a problem after the component unmounts.",2021-01-11T16:09:11Z
152,758065931,"I have the same issue, too. It's very annoying to get this warning any time I type useEffect() in VS Code. <img width=""478"" alt=""Screenshot 20210111 at 17 23 36"" src="" Thanks for fixing this!  ",2021-01-11T16:25:05Z
153,758196041, how did you fix this issue?,2021-01-11T20:13:58Z
154,758198953,Thanks for the fix!,2021-01-11T20:19:13Z
155,758199230,This was caused by a bug in scheduler that was fixed in . I wouldn't guess it's related to what you're seeing (if you're seeing a bug in a product test).,2021-01-11T20:19:42Z
156,758288071,"3rd party libraries are outside of my direct control so I wouldn't want to be barraged by warnings I can't do anything about. The only thing to do for 3rd party library warnings is to wait and see if there'll be a fix or switch the library for an alternative (assuming a suitable alternative exists). The other issue is that [strict mode seems to break functionality]( I'd love to keep using strict mode, but having to manually include every component except for the one component isn't very practical (at least for me).",2021-01-11T23:25:18Z
157,758294422,Going to land incrementally,2021-01-11T23:42:52Z
158,758296882,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit e973623daa139e93d94840e3c09aedb6fc1e0c90: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-11T23:49:33Z
159,758297745," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against e973623daa139e93d94840e3c09aedb6fc1e0c90 </p ",2021-01-11T23:51:56Z
160,758297859," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against e973623daa139e93d94840e3c09aedb6fc1e0c90 </p ",2021-01-11T23:52:15Z
161,758298335,How is this stale? Something doesn't work. That's called a bug.,2021-01-11T23:53:39Z
162,758333581,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 4e7e36cbfdaac82cebdc59db601ff906483559b7: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-12T01:32:35Z
163,758334254," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 4e7e36cbfdaac82cebdc59db601ff906483559b7 </p ",2021-01-12T01:34:45Z
164,758334760," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 4e7e36cbfdaac82cebdc59db601ff906483559b7 </p ",2021-01-12T01:36:19Z
165,758426215,"Close this issues because it's intended feature. + I changed to like this js const actions = { increase: () = { middleware({ type: ""INCREASE"", payload: 1 }); return dispatch({ type: ""INCREASE"", payload: 1 }); }, substract: () = { middleware({ type: ""SUB"", payload: 1 }); return dispatch({ type: ""SUB"", payload: 1 }); } }; ",2021-01-12T06:02:56Z
166,758705302,"Hey , thanks for submitting. We only disable the console in the second call, you should still see logs from the first call. Starting with React 17, React automatically modifies the console methods like console.log() to silence the logs in the second call to lifecycle functions. If we didn't do this, the console would contain duplicate messages so we made the tradeoff to disable it in the second pass. This can have side effects, which we offer a [workaround for](",2021-01-12T14:48:09Z
167,758708946,"Can confirm this will happen in the long term (React 19+), but there's no formal timeline. We'll give a fair amount of lead time before making the change.",2021-01-12T14:53:53Z
168,758714490," The other issue is that strict mode seems to break functionality. To me, that indicates that Grid has a bug and StrictMode is making the bug's behavior occur in a reproducible way. That's one of the main purposes of strict mode and how it works.",2021-01-12T15:02:41Z
169,758748322,"Thinking about this more, shouldn't this be allowed: function Component1() { try { useHook(); } catch { // ignore catch } return <div /; } ",2021-01-12T15:48:43Z
170,758760934,"Hi, I had this bug while trying to export a functional component upon declaring it. export default Map = () = {...} would fail, while: const Map = () = {...} then: export default Map; would work like a charm! I don't know if there is any general provision against exporting a component upon declaring it, because it works fo me in other situations. If so, I would love to learn about the reason. I'm using: ""react"": ""16.13.1"", ""reactnative"": ""0.63.3"",",2021-01-12T16:07:46Z
171,758769735,"I'd agree regarding consistent usage for builtins, but I think it might be confusing if some hooks are ""valid"" in a trycatch and others aren't (should a hook that just wraps a builtin be allowed? what if we call a builtin after a custom hook?). I don't have a strong preference either though. Regarding the example: I don't think this should be allowed. If useHook throws internally because, e.g., we're accessing something on a null'd useContext field, we'd exit useHook early/conditionally before calling any remaining hooks in it.",2021-01-12T16:21:08Z
172,758819304,Hey thanks for the explanation. You actually highlighted the underlying issue I am having! I'm trying to write a child reconciler right now and eventually discovered the existence of the two passes. Would you be able to direct me to the design/intent for this twopass approach or maybe how to disable it for childreconcilers in the tree?,2021-01-12T17:33:16Z
173,758837731," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 3ed789b477f73a6afc70f591aacb658648dc0f55 </p ",2021-01-12T18:04:40Z
174,758840740," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 3ed789b477f73a6afc70f591aacb658648dc0f55 </p ",2021-01-12T18:09:48Z
175,758841955,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 3ed789b477f73a6afc70f591aacb658648dc0f55: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-12T18:11:49Z
176,758844571,bump,2021-01-12T18:16:15Z
177,758893404,"Yea, I understand that, which is great for the author of the 3rd party lib, but not much I can do about it other than disable react strict mode for my entire app :) ",2021-01-12T19:46:17Z
178,758894862,Which is probably what you should do (at least for now). StrictMode is providing a valuable signal in this case: the library you're using in your application is probably not going to work well in concurrent mode. ,2021-01-12T19:49:06Z
179,758964737, isn't that true whether or not the try/catch is used?,2021-01-12T20:48:47Z
180,758970285,"Sure! [Here's]( the PR adding the double render in strict mode, [here's]( the issue that inspired it, and [here's]( the PR for ignoring the second log.",2021-01-12T20:52:17Z
181,759252976,"Hi ! Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign at < If you are contributing on behalf of someone else (eg your employer), the individual CLA may not be sufficient and your employer may need to sign the corporate CLA. If you have received this in error or have any questions, please contact us at [cla.com](mailto:cla.com?subject=CLA%20for%20facebook%2Freact%20%2320578). Thanks!",2021-01-13T07:08:45Z
182,759255012,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 0d13591d0d5d22456275fc257759fb0d170113c8: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-13T07:13:23Z
183,759255381," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 0d13591d0d5d22456275fc257759fb0d170113c8 </p ",2021-01-13T07:14:14Z
184,759255846,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 33ef48fde1c924ac8b8901dd830600ad68ccb105: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-13T07:15:21Z
185,759255913," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 0d13591d0d5d22456275fc257759fb0d170113c8 </p ",2021-01-13T07:15:32Z
186,759257496," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 33ef48fde1c924ac8b8901dd830600ad68ccb105 </p ",2021-01-13T07:19:25Z
187,759257686," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 33ef48fde1c924ac8b8901dd830600ad68ccb105 </p ",2021-01-13T07:19:54Z
188,759494337," This turned off the rule for me, and I'm able to keep my config as well ",2021-01-13T14:44:48Z
189,759644967," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 6ea9ed6922859d940a37cd33f3cce4bfd8498d06 </p ",2021-01-13T18:46:17Z
190,759645005," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 6ea9ed6922859d940a37cd33f3cce4bfd8498d06 </p ",2021-01-13T18:46:22Z
191,759647199,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 6ea9ed6922859d940a37cd33f3cce4bfd8498d06: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-13T18:50:29Z
192,759696136,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 17ec8b4672db4ca42942b4b70ffd2ac9e230e850: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-13T19:45:06Z
193,759699819," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 17ec8b4672db4ca42942b4b70ffd2ac9e230e850 </p ",2021-01-13T19:48:28Z
194,759699874," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 17ec8b4672db4ca42942b4b70ffd2ac9e230e850 </p ",2021-01-13T19:48:33Z
195,759733634,I think this issue has resurface itself in reactdom.13.1 which pulls scheduler.19.1,2021-01-13T20:54:32Z
196,759835132," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against ed273c2594ac85e679deb593b2f31301a5993b6f </p ",2021-01-14T00:02:37Z
197,759835601," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against ed273c2594ac85e679deb593b2f31301a5993b6f </p ",2021-01-14T00:03:43Z
198,759840565,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit ed273c2594ac85e679deb593b2f31301a5993b6f: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-14T00:18:25Z
199,759916294," I have figured out the issue in my code. Before: // the issue here is that I mutate the quantity value. cart.purchases[index] = { product: action.product, quantity: cart.purchases[index].quantity + 1, }; After: // I was mutating purchases and now increment its quantity in an immutable way: const incrementPurchasesQuantity = (purchases: Purchase[], index: number) = { return [ ...purchases.slice(0, index), { ...purchases[index], quantity: purchases[index].quantity + 1 }, ...purchases.slice(index + 1), ]; }; cart = { shop, // this is another field in cart, ignore it in this case purchases: incrementPurchasesQuantity(purchases, index), }; Hope it helps. ",2021-01-14T04:23:40Z
200,759929102,"I think the same issue is happening to me: react_devtools_backend.js:5158 Uncaught RangeError: Maximum call stack size exceeded at shouldFilterFiber (react_devtools_backend.js:5158) at mountFiberRecursively (react_devtools_backend.js:5820) at mountFiberRecursively (react_devtools_backend.js:5871) at mountFiberRecursively (react_devtools_backend.js:5871) at mountFiberRecursively (react_devtools_backend.js:5880) at mountFiberRecursively (react_devtools_backend.js:5880) at mountFiberRecursively (react_devtools_backend.js:5880) at mountFiberRecursively (react_devtools_backend.js:5880) at mountFiberRecursively (react_devtools_backend.js:5880) at mountFiberRecursively (react_devtools_backend.js:5880) I'm rendering (among other things) about 10k very small react elements jsx function PlaceholderRow() { return ( <tr className=""candidaterow"" <td colSpan=""10""</td </tr ); } React Developer Tools 4.10.1 (12/4/2020)",2021-01-14T05:07:50Z
201,760003021,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit e522991c4172021e5d46c9ff4c3829eff2f57b0d: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-14T08:01:06Z
202,760081891,"Thanks for the reproducible example! You're logging twice: 1. console.log(""roo""); logs ""roo"" 2. console.log(ref.current.say()); which logs the return value of say() which is undefined so you log undefined In the title you're saying ref.current is undefined sometimes but in your repro ref.current.say() would crash if that would be the case. The expected behavior aways get roo diff say() { console.log(""roo""); + return ""roo"" } I don't see how this is related to React.",2021-01-14T09:44:33Z
203,760083394,Thanks for the report Error happens while trying to use the profiler on my React app on Chrome Could you elaborate a bit more on this point: 1. Does this happen with every app or just your app? If it only happens with your app can you reduce this to a minimal example and share with us? 2. What exact steps in the profiler lead to this error? ,2021-01-14T09:47:16Z
204,760087939,"Thanks for the report. This looks familiar to <script src="" process.env.NODE_ENV==='development'?'development':'production' %.min.js""</script There is no development.min.js. You're probably never hitting this branch in the ternary and always use the production bundle. Mixing the React production bundle with the JSX dev bundle is already identified as the cause of Maybe your NODE_ENV isn't set at all? Usually the dev/prod flags are checked by process.env.NODE_ENV !== 'production'. Could you share a cloneable repro that I can tinker with?",2021-01-14T09:55:56Z
205,760137511,"This should be reopened! The explanation here why this issue is closed is definitely wrong! Yes there is a problem with standards compliance. But if standard compliance would be the reason for this issue, it would fail in dev mode, too! That's because the browser is always in production mode, whether react is in dev or not! So there is definitely a fixable bug in react causing the dev mode to work different from production! ",2021-01-14T11:28:03Z
206,760179266,"This is old Chrome bug, I just open for it.",2021-01-14T12:55:27Z
207,760208457," (As a side note, I think we should start preparing semver releases using the preparereleasefromci script, too, and get rid of preparereleasefromnpm. I think downloading from npm was a neat idea originally, but because we already run npm pack before storing the artifacts in CI, there's really not much additional safety; the only safeguard it adds is the requirement that a ""next"" release must have already been published.) What's the main motivation for this change? Seems like that's a nice safeguard, though it's admittedly not totally necessary. What additional benefit do we get from publishing from CI?",2021-01-14T13:50:24Z
208,760248754,"Thanks your debugging. As read your express and rewrite my example code, I thank it may be other issue. My opinion of this report is some times I call ref.current.foo() as say, ref.current.say() , and got null or undefined. I can understand the logic of this issue, the ref.current has been reassigned to the default state. maybe anther component’s rerender cause it. I’ll debug on my code first. So, let me close this issue, and say thanks again. ",2021-01-14T14:56:43Z
209,760297958," What's the main motivation for [getting rid of the prepare from npm script]? Seems like that's a nice safeguard, though it's admittedly not totally necessary. What additional benefit do we get from publishing from CI? Not much other than fewer things to maintain, or accidentally subtly break.",2021-01-14T16:13:10Z
210,760298266," and others, please merge it, I also want this feature;) Thanks! 1,5 years, why haven't merged?",2021-01-14T16:13:39Z
211,760302146,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 0602ce5ede4cdc0b951c4d684418961c0505002b: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-14T16:19:43Z
212,760302225," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 0602ce5ede4cdc0b951c4d684418961c0505002b </p ",2021-01-14T16:19:50Z
213,760302557," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 0602ce5ede4cdc0b951c4d684418961c0505002b </p ",2021-01-14T16:20:24Z
214,760322851,"If it helps anybody, this is how I solved it in my event handler event.relatedTarget?.click()",2021-01-14T16:52:38Z
215,760347808,Reopening since the [PR that would implement this feature]( is still open. ,2021-01-14T17:33:23Z
216,760430276,RESOLVED: The issue was caused by /plugintransformreactconstantelements behaving unexpectantly. Removing this package resolved the issue.,2021-01-14T19:37:25Z
217,760688279,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit d75105b7747cf2d90e1a7ccc2c298ab5da2f2438: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-15T06:41:27Z
218,760700221,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit e35a7ee273098632896b3bef08d9922ad89a248c: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-15T07:10:13Z
219,760702294," <! 0 failure: 1 warning: Build job for bas... 1 markdown notices DangerID: dangeridexperimental; <table <thead <tr <th width=""50""</th <th width=""100%"" datadangertable=""true""Warnings</th </tr </thead <tbody<tr <td</td <tdBuild job for base commit is still pending: 6132919bf2b8851382547b34a442e7e0c09c5697</td </tr </tbody </table Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against e35a7ee273098632896b3bef08d9922ad89a248c </p ",2021-01-15T07:15:23Z
220,760702461," <! 0 failure: 1 warning: Could not find bu... 1 markdown notices DangerID: dangeridstable; <table <thead <tr <th width=""50""</th <th width=""100%"" datadangertable=""true""Warnings</th </tr </thead <tbody<tr <td</td <tdCould not find build artifacts for base commit: 6132919bf2b8851382547b34a442e7e0c09c5697</td </tr </tbody </table Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against e35a7ee273098632896b3bef08d9922ad89a248c </p ",2021-01-15T07:15:48Z
221,760788564,"I'm running into the same issue as above. I have a stateful nonReact class for API accesses that I pass around the app, and I define a useFetchAPI() hook function inside of it that I only call from function components. It would be nice to not require adding explicit comments to disable ESLint for those lines.",2021-01-15T09:46:56Z
222,760816987,Duplicate of ,2021-01-15T10:35:34Z
223,760909367,Is the goal for this to eventually support wwwmodern and wwwclassic too?,2021-01-15T12:17:48Z
224,760932400,"Hello, Your explanation, for the most part, makes total sense. I definitely understand in principle now that I set myself up for an infinite loop with the way that I structured RenderLogo. That said, I do have one final question at this point. Why does setting a variable in the way that I did trigger a rerender of the screen? That's ultimately my biggest source of confusion at this point. Thanks again for your help!",2021-01-15T13:09:06Z
225,760964122,"Ah, okay. That makes total sense. Thanks for the detailed explanation!",2021-01-15T14:11:27Z
226,761019442,"Seems suspicious that it's only discovered many months after the 16.14 release. I'd bet that something is wrong with the polyfilling, but I don't know how exactly. The symptom appears to mean that when react is initialized, Symbol polyfill is not yet there, but when reactdom is initialized, the Symbol polyfill has already run. This would cause them to not recognize each other. Can you check if this is correct, and why this might be happening?",2021-01-15T15:47:23Z
227,761020349,"Check the compiled code. I wonder if TS is inserting an import to react/jsxruntime _before_ other imports, which would cause the polyfill to run too late.",2021-01-15T15:48:40Z
228,761035847,"You're right, there is a jsxruntime before the polyfill import (if I read the minified file correctly), however it does not appear to be TS related as I have the same problem when creating another project using CRA but skipping the typescript template this time. ![image]( This is from the nonTS version ☝️ I do agree with you that it's really strange that it's taken this long for the problem to surface though I've spent a good part of the day googling without finding anyone else having the same problem (in recent months) 🤷 ",2021-01-15T16:15:17Z
229,761046228,"All tests pass now except for ""_should poll for updates for the currently selected element_"" (in inspectedElementtest). That one's interesting because it seems like it _should_ be passing, except the transition+refresh that get scheduled never gets rendered. Will dig in more this afternoon.",2021-01-15T16:33:57Z
230,761069222,"So the easy workaround for now is to separate the file where you load the polyfill and the file where you use JSX. js import 'reactapppolyfill/ie11'; import 'reactapppolyfill/stable'; import './renderApp'; // Call ReactDOM.render here The upstream solution is to move the order of the imports, I think. I.e. make the transform put the JSX import last. Can you file an issue in Babel to discuss this?",2021-01-15T17:15:37Z
231,761069533,Going to close it here since the issue is not something we can fix in the _React library_ but it can be fixed in Babel and TS.,2021-01-15T17:16:11Z
232,761076161,We had a previous report in which we moved to The fix was merged but is not released yet. So the next release of /plugintransformreactjsx should fix this.,2021-01-15T17:28:41Z
233,761194893,"I'm sorry you experienced this bug!  Looks like this problem was already reported though () so I'm going to mark this issue as a duplicate and close it. If you have additional context that might help us repro this problem, please leave a comment on the other issue! Thank you",2021-01-15T21:00:02Z
234,761195954,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 6bc4eb649f5bef91c7fba97bbdd9f3ce38e1a1d6: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-15T21:02:38Z
235,761197128," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 6bc4eb649f5bef91c7fba97bbdd9f3ce38e1a1d6 </p ",2021-01-15T21:05:31Z
236,761197254," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 6bc4eb649f5bef91c7fba97bbdd9f3ce38e1a1d6 </p ",2021-01-15T21:05:50Z
237,761197639,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit ae89c8afcf420edd9ab8b9f9f7b2aff113da882c: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-15T21:06:46Z
238,761198831," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against ae89c8afcf420edd9ab8b9f9f7b2aff113da882c </p ",2021-01-15T21:10:00Z
239,761199296," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against ae89c8afcf420edd9ab8b9f9f7b2aff113da882c </p ",2021-01-15T21:11:09Z
240,761213755,Okay. That test is still not great and I'd love to get input on how to resolve it. Otherwise I think this PR is ready for another set of eyes!,2021-01-15T21:42:32Z
241,761221023,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit d6d2baa4b65618e8a3e7bec81761175caa0458bd: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-15T22:00:22Z
242,761430627,"This really does not need to be added to React, at all. It can stay in userland.",2021-01-16T05:13:08Z
243,761591072,"The code above looks overengineered to me. I’d recommend checking out this article: [Tidy TypeScript: Avoid traditional OOP patterns]( You can also check out how [apolloclient]( or [reactquery]( are implemented. In short, they have classbased stateful cores with clean classfree react hooks around them.",2021-01-16T16:24:59Z
244,761599847,I am working on a burshable parallel coordinates graph with d3 v6 in react. I have the exact same issue: Attempted import error: 'event' is not exported from 'd3selection' (imported as 'currentEvent').,2021-01-16T17:16:02Z
245,761600570,okay. 1 minute later I appear to have found an answer: like written in [this article]( let selected = d3.brushSelection(this); should fix the problem,2021-01-16T17:20:49Z
246,761602220,"Still an issue, although less interesting the older it gets (e.g. we are dropping support for IE11 in a few months)",2021-01-16T17:31:57Z
247,761716728,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit e1192f430a788359feb35471e301861af0e188d1: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-17T02:16:12Z
248,761803268,"Hi ! Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign at < If you are contributing on behalf of someone else (eg your employer), the individual CLA may not be sufficient and your employer may need to sign the corporate CLA. If you have received this in error or have any questions, please contact us at [cla.com](mailto:cla.com?subject=CLA%20for%20facebook%2Freact%20%2320605). Thanks!",2021-01-17T12:21:15Z
249,761803612,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit b8a28f67cd57ae6f6d047f5b8f25592ee954a912: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-17T12:23:40Z
250,761808446,Just hit this warning and realized that I actually do want to have undefined as the initial value otherwise how does the placeholder het rendered? The input box uses placeholder to render in case the initial value is undefined and setting the value to anything else stops the placeholder string from rendering.,2021-01-17T12:58:34Z
251,761823586,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 09b8fa9685a97076a78a24fc72ee4cbb5049af7c: |Sandbox| Source | ||| |[React]( Configuration | |[React (forked)]( PR | ",2021-01-17T14:44:24Z
252,761823938," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 09b8fa9685a97076a78a24fc72ee4cbb5049af7c </p ",2021-01-17T14:47:10Z
253,761823979," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 09b8fa9685a97076a78a24fc72ee4cbb5049af7c </p ",2021-01-17T14:47:32Z
254,761853351,"Hi ! Thank you for your pull request and welcome to our community. We require contributors to sign our Contributor License Agreement, and we don't seem to have you on file. In order for us to review and merge your code, please sign at < If you are contributing on behalf of someone else (eg your employer), the individual CLA may not be sufficient and your employer may need to sign the corporate CLA. If you have received this in error or have any questions, please contact us at [cla.com](mailto:cla.com?subject=CLA%20for%20facebook%2Freact%20%2320607). Thanks!",2021-01-17T18:01:55Z
255,761853843,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 0d75def6353b03075952e218af5db5b160b69280: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-17T18:04:34Z
256,761854274," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 0d75def6353b03075952e218af5db5b160b69280 </p ",2021-01-17T18:07:23Z
257,761854547," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 0d75def6353b03075952e218af5db5b160b69280 </p ",2021-01-17T18:09:14Z
258,762065560,Ohh. Why didn't you mark this in the documentation for StrictMode?,2021-01-18T08:08:55Z
259,762197249," My understanding here is that the agreed solution for this is to introduce defaultMuted to be consistent. Do you think this could be a ""good first issue"" to tackle by looking at other default props or there is more than that? Is somebody already working in that direction?",2021-01-18T11:46:09Z
260,762387373,"Sounds like a local issue considering: error An unexpected error occurred: ""registry.npmjs.org/react: errorPEM routines:get_name:no start line"". info If you think this is a bug, please open a bug report with the information provided in ""C:\Users\nadia\Desktop\MERN Stack\tinderapp\yarnerror.log"". This indicates that you should open a bug report in ",2021-01-18T17:35:23Z
261,762388825,Sounds like this was also requested in Is there anything different between these two issues?,2021-01-18T17:38:52Z
262,762438985,Seems exactly this. I haven't found it by search's I github (was not sure about what to type) Thanks I close it,2021-01-18T19:40:53Z
263,762443635,"This doesn't sound like a bug. Since iframes are sandboxed from the parent page you shouldn't be able to access the parent page from an iframe. Going to close, but if you create a codesandbox reproducing the issue I'll take a closer look.",2021-01-18T19:53:25Z
264,762444243,Thanks but Node 16 is still pending and we'll want to confirm all our dev workflows work before enabling it.,2021-01-18T19:55:09Z
265,762445175, are you able to reproduce this without Hookstate to rule out Hookstate as the source of the issue?,2021-01-18T19:57:45Z
266,762446261,"As the error message states, there are three common usererrors that can cause this to happen. Closing as there is no code sample and the stated behavior works as expected. if you still believe this is a bug in React and not in your code, please provide a codesandbox that reproduces it and I'll take a look.",2021-01-18T20:00:37Z
267,762451178,"Hey , thanks for the suggestion and tests. Let's leave this in userland though.",2021-01-18T20:13:28Z
268,762460790," Using React.useState doesn't cause this issue. I wouldn't have opened an issue for this if it wasn't for the fact that the owner of hookstate mentioned [never having come across this error before]( The crash is somewhere within the devtools. And I think it is relatively recent issue as I have not seen it before and I am sure I used more than one state hook in many places. So yes, this is somewhat of a Hookstate issue but it wasn't present in a previous version of React Dev Tools acording to the owner of Hookstate.",2021-01-18T20:38:33Z
269,762483494,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit fa037cf70f7a556c24516393acd310f5cddbd8a4: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-18T21:44:33Z
270,762484225," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against fa037cf70f7a556c24516393acd310f5cddbd8a4 </p ",2021-01-18T21:46:48Z
271,762484276,"Note our whole approach to ""how to not fire events while disabled"" seems flawed and there's a bunch of bugs related to it. Just a note to whoever looks at this again to investigate it deeper than the latest symptom. ",2021-01-18T21:46:56Z
272,762484348," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against fa037cf70f7a556c24516393acd310f5cddbd8a4 </p ",2021-01-18T21:47:08Z
273,762502731,"Confirmed. do you want to put in a PR to fix it? You should be able to just change newChild to Object.prototype.toString.call(newChild) in the three or so places that this error is thrown. That change would result in this message: Objects are not valid as a React child (found: [object Temporal.ZonedDateTime]). If you meant to render a collection of children, use an array instead.""",2021-01-18T22:50:28Z
274,762503405," does Hookstate use React Hooks under the hood? If so, this issue should be reproducible with vanilla React. If not, and Hookstate is not using React, then it is not supported by React DevTools.",2021-01-18T22:53:03Z
275,762506540,"Hey , thanks for the suggestion. You can set the initial value of the state to the default value you want in a controlled component. If defaultValue was allowed, then it would violate the ""single source of truth"" aspect of controlled components because there would then be two sources of truth for the value.",2021-01-18T23:04:45Z
276,762507198, it is indeed using React Hooks under the hood. ![image]( And I tried reproducing it with React Hooks and no errors popped up.,2021-01-18T23:07:06Z
277,762511949,"I'm sorry you experienced this bug! Looks like this problem was already reported though () so I'm going to mark this issue as a duplicate and close it. If you have additional context that might help us repro this problem, please leave a comment on the other issue!",2021-01-18T23:26:20Z
278,762513604," thanks for the info! I'm going to close this until there's a vanilla React reproduction case since, as you said, this works when using just React hooks.",2021-01-18T23:33:27Z
279,762524088,It seems like I do not have permissions to reopen it. Could you please reopen it?,2021-01-19T00:13:39Z
280,762533163,"Does using useMemo on _blockA_ and _blockB_ child components from the first example, prevent its rerender?",2021-01-19T00:47:03Z
281,762550193,Concise version of this bug is opened: ,2021-01-19T01:52:01Z
282,762550726," thanks for the detailed information, I'll reply on the new issue.",2021-01-19T01:54:05Z
283,762551561," thanks for submitting, continuing the discussion from It's very common for stack traces to point to React internals where the issue is sourced in user code. Since you're the expert of the way your library works, can you strip down the example to use vanilla React?",2021-01-19T01:57:15Z
284,762554475," Does using useMemo on _blockA_ and _blockB_ child components from the first example, prevent its rerender? No. That memoizes the JSX and can have a similar effect to memo. But it doesn't provide any sort of unique ID to the tree and React will not move the tree when it changes parents.",2021-01-19T02:08:00Z
285,762555210,"Have you seen the code in the demo repo? I stripped down the example to just that: tsx export function useState() { React.useState(0); React.useEffect(() = { return () = {} }); } This is vanilla react, there is nothing left from Hookstate really. And this hook causes the crash if used twice in a component. I can not make it smaller than this. Is it good enough?",2021-01-19T02:10:50Z
286,762556457,"Here is the complete reproducer in 16 lines of vanilla react code: tsx import React from 'react'; function useState() { React.useState(0); React.useEffect(() = () = {}); } function Counter() { useState(); React.useState(0); return <divOpen React Dev Tools Components panel, click on Counter component and observe the crash in the logging console.</div; } export default Counter; ",2021-01-19T02:15:33Z
287,762558174,I have updated the original description too. There is nothing left from Hookstate in the above 16 lines of vanilla react code.,2021-01-19T02:20:25Z
288,762558516,Committed the same code sample to the demo repository now.,2021-01-19T02:21:30Z
289,762561214,"Issue reproduced, and it's a naming conflict? Renaming the custom hook to useMyState seems to work. ",2021-01-19T02:30:35Z
290,762561628,"Maybe naming. But devtools should not influence how I name my functions, right? Compiler is happy with this name, so why not...",2021-01-19T02:32:09Z
291,762561778," thanks a ton for following up and reducing the code down. The issue is that DevTools errors when a custom hook is named useState. If you rename the custom hook in your example to useStateCustom, DevTools does not error.",2021-01-19T02:32:45Z
292,762562606,", sure, but I can not rename the hook as it is the interface of the public library and I could not find better name originally. Hookstate.useState is in the different module and naming space than React.useState. It does not cause any conflict for the compiler and bundler, why should it for devtools. Hookstate.useState is the supercharged version of React.useState, hence named identically as it is nearly plug and play replacement.",2021-01-19T02:36:09Z
293,762563868,"Yeah, I agree, it probably shouldn't error but I don't have a much context as so let's wait to see what he says. In the meantime, I've created a failing test here Thanks again for reporting the issue and stripping down the issue so I could debug it quickly.",2021-01-19T02:40:48Z
294,762564027,"And thanks shi for debugging this as well, nice find!",2021-01-19T02:41:22Z
295,762564039,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 2834ddcc0e7fa1df918c4b92120924020248722c: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-19T02:41:26Z
296,762564798," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 2834ddcc0e7fa1df918c4b92120924020248722c </p ",2021-01-19T02:43:59Z
297,762565311," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 2834ddcc0e7fa1df918c4b92120924020248722c </p ",2021-01-19T02:45:34Z
298,762578896,"my workaround try to be KISS by abuse self reference from JS context. But it always point to latest, not sure what could it break in various mode and lifecycle in react. At least it work in my case. export default function useStableCallback<T extends (...args: any[]) = unknown(callback: T): T { const ref = useRef({ stableProxy: (...args: any) = { return ref.current.targetFunc(...args); }, targetFunc: callback, }); ref.current.targetFunc = callback; return ref.current.stableProxy as T; } ",2021-01-19T03:29:04Z
299,762628508,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit c0730375e404ea0da84e88ef149166e1f87d806d: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-19T06:22:20Z
300,762652707,yarn ok npm not exec,2021-01-19T07:20:42Z
301,762702413,"Big thanks for this solution with reactdom only, what I wanted to avoid is a dependency to Enzyme which would be counterproductive. I am in the context of Storybook storyshots, which uses reacttestrenderer as a default. Not sure how to switch the render mode for a specific story but I'll check that. ",2021-01-19T09:03:22Z
302,762747339," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 58a4d1cd61d605279522e2296be82a060083dcdc </p ",2021-01-19T10:21:23Z
303,762748208," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 58a4d1cd61d605279522e2296be82a060083dcdc </p ",2021-01-19T10:22:55Z
304,762751816,It seems like onSubmit isn't propagated,2021-01-19T10:29:30Z
305,762787982," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against ad46678fd19f328d1e2e37efd19d8cca70043a02 </p ",2021-01-19T11:40:07Z
306,762788409,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit ad46678fd19f328d1e2e37efd19d8cca70043a02: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-19T11:41:02Z
307,762791402, That test is still not great and I'd love to get input on how to resolve it. Does help?,2021-01-19T11:47:32Z
308,762808155,"Thanks for the report. Whenever you want to update state based on the current state, you should use [functional state updates]( I applied this pattern to your codesandbox and it seems to result in the expected behavior: Does this solve your problem?",2021-01-19T12:23:20Z
309,762810836,Awesome!! yeah it will work for me. Thanks alot.,2021-01-19T12:28:52Z
310,762854298,"For googlers, this post is providing a satisfying solution with React Testing Library : After a first try, it feels more robust and faster to me than using Enzyme, in the context of Storyshots/Jest.",2021-01-19T13:55:58Z
311,762890472,"Thanks ! I wish I knew why [that one test]( required such approach to pass, but I think that's something I can follow up with later.",2021-01-19T14:50:42Z
312,762898523,Excellent. Thank you for pushing a test. I'm rebasing this branch locally since it conflicts with some Suspense changes I made last week. I'll review it momentarily.,2021-01-19T15:02:11Z
313,762900476,"try to use a clean context with this [library]( see this [code sandbox example]( check also this [article]( actually, you can create a clean context with _createContext_ from _reacthooksincallback_ ![Screenshot 20210119 at 15 53 49]( and use the _useContextSelector_ hook to pick only the desired part from your context ![Screenshot 20210119 at 15 59 47]( you can also _filter out rerenders noise from derived context's hooks_ like with this _formik_ example ![Screenshot 20210119 at 15 49 38]( ",2021-01-19T15:04:49Z
314,762902101,Soon as CI passes I'll land this. Thanks again for the great investigation work and for your patience.,2021-01-19T15:07:23Z
315,762903019, That test is still not great and I'd love to get input on how to resolve it. Does help? That comment was referring to [this]( which is different. Your findings with the inline snapshot are interesting though. So the real issue was the async done() callback? (Obviously the date formatting issue but that's separate.) Maybe we can discuss the pros and cons of that in a follow up PR :) ,2021-01-19T15:08:47Z
316,762905063,Thanks for the bug report and concise repo. I'll take a look this morning.,2021-01-19T15:11:44Z
317,762909933,bump,2021-01-19T15:18:27Z
318,762930389,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit a887dbe5dc80ffd5d80aedc4603b296e277c227d: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-19T15:47:47Z
319,762930586," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against a887dbe5dc80ffd5d80aedc4603b296e277c227d </p ",2021-01-19T15:48:05Z
320,762930616," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against a887dbe5dc80ffd5d80aedc4603b296e277c227d </p ",2021-01-19T15:48:07Z
321,762951522,Thanks!,2021-01-19T16:17:32Z
322,762965879," I am still working on linking the reactnative part (reactspring is giving me issues), but checkout for a reactnativeweb storybook + CRA example. ",2021-01-19T16:39:09Z
323,763043254,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 4452907c335cdc55eb2cc49e588e386350ff0479: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-19T18:40:27Z
324,763078532,"I'm having this issue as well using Next.js. My experience aligns with when using the ReactDOMServer.renderToString() method within a useMemo, I get the error: TypeError: Cannot set property 'memoizedState' of null",2021-01-19T19:33:18Z
325,763087121,"The only real solution for me is to use React as an external in webpack, then to load the React delivery in the root html page. Like this react will 'ot be bundled in the app and all the code will use the same instance",2021-01-19T19:49:18Z
326,763107524," in your smaller version, I don't think you need the useEffect",2021-01-19T20:20:08Z
327,763107647,Seems like (maybe among other things) this check is not great: ,2021-01-19T20:20:27Z
328,763107972," in your smaller version, I don't think you need the useEffect You do, if you want to repro the runtime error. Without it, the error isn't thrown (although the inspected tree is missing info I think)",2021-01-19T20:21:06Z
329,763132611,Can confirm this is happening on the standalone version on Windows. Initial messages are sent: ![image]( but the app stays blank: ![image]( ,2021-01-19T20:52:32Z
330,763209770,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 403d7012048177657a77279c2245e6f0887e488f: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-19T23:29:38Z
331,763216216,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 2f6dfedbcc91a68dcda5dae3ae716e0db172a081: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-19T23:46:21Z
332,763252730,"sandbox build failed with { [Error: EACCES: permission denied, mkdir '/tmp/output/scheduler'] which I guess is some systemic issue. I'll try to rebase and hope for the best :)",2021-01-20T01:05:30Z
333,763254999,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 58a4d1cd61d605279522e2296be82a060083dcdc: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-20T01:11:40Z
334,763300624,So now.. which is the recommended way to check if a component (instead of an element) is memo component? ,2021-01-20T03:16:10Z
335,763322107,"Should be reopened. This still occur on v16.8.2. I figure out that when using webpack to bundle, the line to declare useState threw an error, for instance: var _b=(0,react.useState)(0)",2021-01-20T04:27:57Z
336,763349603,"So now if I return an instance of MyCustomType, and it MyCustomType is defined, we'll no longer call it? Not a big deal, but seems unintentional. Also maybe we shouldn't stringify the type in the production build at all. Only in dev.",2021-01-20T05:43:18Z
337,763355124,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 6079094ac192d64e2da444e2c1cc17f4370abdee: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-20T05:56:19Z
338,763357929," <! 0 failure: 1 warning: Could not find bu... 1 markdown notices DangerID: dangeridexperimental; <table <thead <tr <th width=""50""</th <th width=""100%"" datadangertable=""true""Warnings</th </tr </thead <tbody<tr <td</td <tdCould not find build artifacts for base commit: 11a983fc76192037798d2f93dedf09af97f99884</td </tr </tbody </table Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 6079094ac192d64e2da444e2c1cc17f4370abdee </p ",2021-01-20T06:02:34Z
339,763357966," <! 0 failure: 1 warning: Build job for bas... 1 markdown notices DangerID: dangeridstable; <table <thead <tr <th width=""50""</th <th width=""100%"" datadangertable=""true""Warnings</th </tr </thead <tbody<tr <td</td <tdBuild job for base commit is still pending: 11a983fc76192037798d2f93dedf09af97f99884</td </tr </tbody </table Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 6079094ac192d64e2da444e2c1cc17f4370abdee </p ",2021-01-20T06:02:39Z
340,763364871,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 21d4b03af874b93aaec9a0453ddd31d59b128c50: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-20T06:17:09Z
341,763366161," <! 0 failure: 1 warning: Build job for bas... 1 markdown notices DangerID: dangeridstable; <table <thead <tr <th width=""50""</th <th width=""100%"" datadangertable=""true""Warnings</th </tr </thead <tbody<tr <td</td <tdBuild job for base commit is still pending: 741dcbdbec52b088e33538cd93c679c05c146aa1</td </tr </tbody </table Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 21d4b03af874b93aaec9a0453ddd31d59b128c50 </p ",2021-01-20T06:19:55Z
342,763366199," <! 0 failure: 1 warning: Build job for bas... 1 markdown notices DangerID: dangeridexperimental; <table <thead <tr <th width=""50""</th <th width=""100%"" datadangertable=""true""Warnings</th </tr </thead <tbody<tr <td</td <tdBuild job for base commit is still pending: 741dcbdbec52b088e33538cd93c679c05c146aa1</td </tr </tbody </table Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 21d4b03af874b93aaec9a0453ddd31d59b128c50 </p ",2021-01-20T06:20:01Z
343,763448537, I guess it is because of the unsettled width and height of the image tag?,2021-01-20T08:59:52Z
344,763489802,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit d5e72247e7a3da3b3cc250f82d5f81821642dc15: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-20T10:04:28Z
345,763491164," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against d5e72247e7a3da3b3cc250f82d5f81821642dc15 </p ",2021-01-20T10:06:26Z
346,763491499," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against d5e72247e7a3da3b3cc250f82d5f81821642dc15 </p ",2021-01-20T10:06:52Z
347,763578633,"I use the MobX, so according to [the tutorial]( I added the babel plugin [""/pluginproposalclassproperties"", { ""loose"": false }] and I have the same problem. When remove the babel plugin, the problem is solved. Does anyone know why? ",2021-01-20T12:37:45Z
348,763584152,I agree with the regression and another solution should be made. I will close this PR and create a issue instead. :) ,2021-01-20T12:48:19Z
349,763627967,Thanks ,2021-01-20T14:06:39Z
350,763755563,"I need to sit this task down for now because I have something more pressing to work on. If anyone else feels like picking it up, that would be great. We have pretty good test coverage in reactdebugtools.",2021-01-20T16:22:52Z
351,763810547," that was intentional on my part because calling the toString of the instances will give you some string representation of the value of the instance instead of a string of the object's name, so the error message doesn't make sense. E.g.: Objects are not valid as a React child (found: 1611163658464) vs: Objects are not valid as a React child (found: [object MyCustomType]) Is that fair?",2021-01-20T17:30:08Z
352,763811506,Reopening since it came up again in ,2021-01-20T17:31:45Z
353,763811537,Thanks for the report. Closing this in favor of reopening which discussed the same problem.,2021-01-20T17:31:47Z
354,763818644,Thanks for the report. This sounds like a duplicate of . It would help a lot if you could provide a reproduction (preferably with a codesandbox ( to .,2021-01-20T17:43:55Z
355,763892483,"That's not the way custom hook support is supposed to work in DevTools, and I don't think it would be what you wanted anyway (e.g. Effect hook would be invisible in this scenario).",2021-01-20T19:52:15Z
356,763896275,"Brian, yes, I want the effect hook invisible when it is inside of custom hook named useState. I understand you proposal does not have the downside for all other custom hooks, right? On Thu, 21 Jan 2021, 08:52 Brian Vaughn, <notifications.com wrote: That's not the way custom hook support is supposed to work in DevTools, and I don't think it would be what you wanted anyway (e.g. Effect hook would be invisible in this scenario). — You are receiving this because you were mentioned. Reply to this email directly, view it on GitHub < or unsubscribe < . ",2021-01-20T19:58:58Z
357,763897062,It just happens to be the effect hook because of the way this example code is structured. It could be other arbitrary hooks that were shown or hidden if the code were structured differently. That's not a design that I think we would be able to land.,2021-01-20T20:00:25Z
358,763901312,"When you pass an anonymous function to forwardRef, like: forwardRef((props, ref) = {...}), the name of the inner component is undefined (so React falls back to using Anonymous as the name in the UI). DevTools supports a custom displayName attribute if you want to specify what the name should be, although we suggest that be a DEVonly setting (not something you ship to production). Or you could just use a named function, like forwardRef(function MyComponent(props, ref) {...}).",2021-01-20T20:08:22Z
359,763902507,"Looking at your project specifically, I think it's probably this function: Just change: js export const Box = React.forwardRef( ( { Flex, Column, Grow, ColorBg, Fit, Position, P, M, OverflowX, OverflowY, children, style = {}, debug, ...rest }, ref ) = { to: js export const Box = React.forwardRef( function Box( { Flex, Column, Grow, ColorBg, Fit, Position, P, M, OverflowX, OverflowY, children, style = {}, debug, ...rest }, ref ) { ",2021-01-20T20:10:29Z
360,763903668,"I wrote [this comment]( only a few moments ago. I need to sit this task down for now because I have something more pressing to work on. If anyone else feels like picking it up, that would be great. We have pretty good test coverage in reactdebugtools. It still holds.",2021-01-20T20:12:36Z
361,763917540," Looking at your project specifically, I think it's probably this function: Just change: js export const Box = React.forwardRef( ( { Flex, Column, Grow, ColorBg, Fit, Position, P, M, OverflowX, OverflowY, children, style = {}, debug, ...rest }, ref ) = { to: js export const Box = React.forwardRef( function Box( { Flex, Column, Grow, ColorBg, Fit, Position, P, M, OverflowX, OverflowY, children, style = {}, debug, ...rest }, ref ) { Thanks you so much friend for your time and sorry for this stupid mistake ! your awesome. Is work !!",2021-01-20T20:38:47Z
362,763918042,Not a problem. Very glad it's sorted.,2021-01-20T20:39:37Z
363,763986527,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit dc97b890d2096723547932f14607e8588318f944: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-20T22:16:50Z
364,763988698," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against dc97b890d2096723547932f14607e8588318f944 </p ",2021-01-20T22:20:31Z
365,763988845," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against dc97b890d2096723547932f14607e8588318f944 </p ",2021-01-20T22:20:49Z
366,763996745,Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!,2021-01-20T22:34:13Z
367,764463788,"Hmm, yeah I'm not saying that the code I wrote its 100% correct or should result in working behaviour. I'm saying that the error message was really unhelpful and confusing as to finding out the code was actually incorrect.",2021-01-21T08:18:12Z
368,764606600,"I tried everything from here and from other places as well, but no luck. I still get the ""invalid hook call"" error. I [raised my question on Stackoverflow]( with repo links, and details, but for some reason, people started to downgrade it. If anyone here could help me, I'd really appreciate it! ",2021-01-21T12:21:47Z
369,764655409,"I'm sorry you experienced this bug!  Looks like this problem was already reported though () so I'm going to mark this issue as a duplicate and close it. If you have additional context that might help us repro this problem, please leave a comment on the other issue! Thank you",2021-01-21T13:50:32Z
370,764655442,"I'm sorry you experienced this bug!  Looks like this problem was already reported though () so I'm going to mark this issue as a duplicate and close it. If you have additional context that might help us repro this problem, please leave a comment on the other issue! Thank you",2021-01-21T13:50:37Z
371,764655468,"I'm sorry you experienced this bug!  Looks like this problem was already reported though () so I'm going to mark this issue as a duplicate and close it. If you have additional context that might help us repro this problem, please leave a comment on the other issue! Thank you",2021-01-21T13:50:40Z
372,764655506,"I'm sorry you experienced this bug!  Looks like this problem was already reported though () so I'm going to mark this issue as a duplicate and close it. If you have additional context that might help us repro this problem, please leave a comment on the other issue! Thank you",2021-01-21T13:50:43Z
373,764720112,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 77f5475f105089b498b2105db5a47707b963a340: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-21T15:25:27Z
374,764722400," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 77f5475f105089b498b2105db5a47707b963a340 </p ",2021-01-21T15:28:48Z
375,764722915," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 77f5475f105089b498b2105db5a47707b963a340 </p ",2021-01-21T15:29:33Z
376,764764479,"I am having a similar problem and I believe this is a bug in react dev tools. I am using a component which has no props but is using useContext inside (new context, not the legacy one). However in reactdevtools the message is ""The parent component rendered."" I think this is the exact case described here: ",2021-01-21T16:21:27Z
377,764816750,"Hey, any chance to get a review on this one? Or to have a discussion about whether or not it should be merged?",2021-01-21T17:35:48Z
378,764881783,Have you considered using something like instead of rolling your own? ,2021-01-21T19:26:33Z
379,764924428,Here is a fork of the original codesandbox without passing useSortBy to the useTable hook (but really the entire Table component could be removed now as it serves no purpose) as you can see it works perfectly fine. So it'd be interesting to see whatever in useSortBy causes the propagation of the click event to be delayed. ,2021-01-21T20:42:52Z
380,764967225,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 62d0b1367d906352239cbedd4d9756b0b4534108: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-21T21:57:04Z
381,764969685," Should I rewrite invokeEffectsInDev to be iterative or are we okay with recursion in DEV only methods? Probably should just in case, until we can resolve the issue we found in the open source dev build. But doesn't need to block this PR.",2021-01-21T22:02:18Z
382,764997783,"I have to agree with . If the intended behavior is to strip invalid markup, that behavior should match in dev and prod, but it doesn't. That is definitely a problem.",2021-01-21T23:05:11Z
383,765022176, This happens on all apps that I open It occurs when trying to view the flame graph after a recording,2021-01-22T00:09:46Z
384,765144448,: Is the link to the issue the only place where integration for fastrefresh is documented?,2021-01-22T05:49:43Z
385,765228059," This happens on all apps that I open It would help us a lot if you can share one of those apps. As minimal as possible until you can no longer reproduce the error. ""all apps that I open"" is a bit ambiguous since all the apps you did open might use a specific React API that causes this issue.",2021-01-22T08:22:39Z
386,765302624," i have something similar, did u solve it?",2021-01-22T10:19:30Z
387,765406897,"How is this going? In React17, throwing Promise during rendering becomes special , ErrorBoundary can't catch throwing Promise but anything else! This forbid us to implement our own version of Suspense with 'maxDuration' featrue.",2021-01-22T13:45:47Z
388,765414150," Should I rewrite invokeEffectsInDev to be iterative or are we okay with recursion in DEV only methods? Probably should just in case, until we can resolve the issue we found in the open source dev build. But doesn't need to block this PR. Okay. I wasn't sure since my recollection was that it seemed like the recursive methods didn't actually cause performance problems. I'll post a follow up PR.",2021-01-22T13:55:15Z
389,765464392,Hey Did you enable some [component filters]( and then forget to turn them off?  That's my guess.,2021-01-22T15:01:41Z
390,765465692,"Yeah, unfortunately this isn't very actionable for us at the moment. (Profiler works fine for me.) Getting access to one of your apps (or better yet a smaller reduced test case) would be very helpful though!",2021-01-22T15:03:12Z
391,765466395," Hey  Did you enable some [component filters]( and then forget to turn them off?  That's my guess. Hi Brian, thanks for the check on this. I currently have no component filters enabled.",2021-01-22T15:04:06Z
392,765466837,Hey can you please provide a repro for this problem?,2021-01-22T15:04:44Z
393,765467414,"Seems pretty likely to have something to do with your DevTools extension settings, since incognito (same DevTools version) works fine. Tried uninstalling and reinstalling?",2021-01-22T15:05:32Z
394,765471833," Seems pretty likely to have something to do with your DevTools extension settings, since incognito (same DevTools version) works fine. Tried uninstalling and reinstalling? That worked 🤦 Thank You!",2021-01-22T15:11:30Z
395,765472843,No problem. That's pretty curious though. First time I've heard a report of this kind of bug. Glad you got it sorted though!,2021-01-22T15:12:47Z
396,765478445," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against d07e41933ee432a23a94bcd0bdcfbd5c45e04d25 </p ",2021-01-22T15:19:52Z
397,765478982," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against d07e41933ee432a23a94bcd0bdcfbd5c45e04d25 </p ",2021-01-22T15:20:34Z
398,765496034,"The following works const ref = useRef(); useEffect(() = { console.warn(ref.current.getBoundingClientRect().width) console.warn(ref.current.getBoundingClientRect().height) // Padding and margin console.warn(window.getComputedStyle(ref.current).paddingTop) console.warn(window.getComputedStyle(ref.current).marginTop) }, []); ",2021-01-22T15:44:16Z
399,765539850,I think the Code Sandbox failure doesn't look to be related to my PR. Looks like a timeout of some sort?,2021-01-22T16:41:44Z
400,765608362,I have the same issue on Opera 63 with the latest React Dev Tools via Chrome extensions on ElementaryOS. Any help?,2021-01-22T18:35:55Z
401,765618179,bump,2021-01-22T18:54:14Z
402,765635254,Thanks! Going to merge so I can rebase on top,2021-01-22T19:27:32Z
404,765643620,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 1297a660bab109dde5aa1d6c0cdedf8585d25f8d: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-22T19:44:03Z
405,765644958," <! 0 failure: 1 warning: Build job for bas... 1 markdown notices DangerID: dangeridstable; <table <thead <tr <th width=""50""</th <th width=""100%"" datadangertable=""true""Warnings</th </tr </thead <tbody<tr <td</td <tdBuild job for base commit is still pending: a6b5256a29b60620bdeb9266d4935cb59cc1258e</td </tr </tbody </table Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 1297a660bab109dde5aa1d6c0cdedf8585d25f8d </p ",2021-01-22T19:46:35Z
406,765646334,Merging so I can rebase another branch on this :),2021-01-22T19:49:27Z
407,765665355,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 4b28e164f9df6899cb40bad224f9333c0ddf8100: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-22T20:29:28Z
408,765874329,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 26d596d3cdd8226f160f801c3386ffe20e657286: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-23T06:02:45Z
409,765899784,Is the issue still unresolved or fixed? I would like to work on this ,2021-01-23T10:09:50Z
410,766138255,"Obvious question: why useSelectedContext, and not useContextSelector?",2021-01-23T16:51:43Z
411,766142018,"lol, I was waiting somebody ask. Although I understand the intuition, what it's supposed to be is useSelectedContextValue which is too long. In one of the RFCs, there was a discussion about the idea of useContext(ctx, selectorFn). Certainly, this requires to drop unstable_observedBits. Might look cleaner. (Personally, I'm ok with whatever decision is made.)",2021-01-23T17:05:46Z
412,766145501,"Think of this PR as a proof of concept. It’s very unlikely to be the final design. We can bikeshed more before release. Re: why it’s a separate hook , makes it easier to track usages internally, and delete if needed. Also avoids a conflict with observed bits, which we still need to remove. This also isn’t the only contextrelated feature we have planned, and it’s unclear how they’ll overlap. Might be separate hooks, might be all the same hook.",2021-01-23T17:28:40Z
413,766150624,"Gotcha. Out of curiosity, any chance of an RFC or something discussing the other plans for context?",2021-01-23T17:51:02Z
414,766151150,"When they’re more fleshed out, yeah. One of the motivations for this PR was that the other proposals are only useful in combination with this feature (bailing out during render if nothing has changed).",2021-01-23T17:54:30Z
415,766279204,"Usually we want to change ref.current (isn't this exactly why refs are for?), so I don't see much practical value in the getInstance approach. The useState solution is very natural and exactly what's needed. But ideally, React should just improve useRef to accept a lazy init.",2021-01-24T02:32:02Z
416,766289380,"I think, close this issue, since it has more debate rather than solving problem...",2021-01-24T04:27:06Z
417,766295089,There's also docs [here](,2021-01-24T05:32:52Z
418,766330080," Even if we could catch that promise wrapped in an error (e.g. throw ({ promise: new Promise(...) });) that our custom Suspense implementing ErrorBoundary will catch, that will not help us because React unmounts the node that throws anything which is not a promise or handles a caught promise itself. I agree with you, it would be great to have more flexibility and catch promises in our custom components besides the builtin Suspense one.",2021-01-24T11:11:39Z
419,766410208," There are several other methods to conditionally render or hide(CSS display,opacity...) an Element. A visible property would be redundant. If you need this feature you can think about an HOC. If I create a new Component, it does not have a Display property. It requires extra job. Small, but extra. And it is very a often common case.",2021-01-24T18:39:56Z
420,766410818,Key is not redundant with html id because id is renderend to the DOM and key is used internally by the framework.,2021-01-24T18:44:12Z
421,766423955,also messes up with rem units.,2021-01-24T20:10:53Z
422,766427520,issue resolved.,2021-01-24T20:35:25Z
423,766497143," In one of the RFCs, there was a discussion about the idea of useContext(ctx, selectorFn). Certainly, this requires to drop unstable_observedBits. Might look cleaner. (Personally, I'm ok with whatever decision is made.) I think this is better, we can easily bail in/out of the selector functionality anytime. Could also imagine the API being like this: tsx declare function useContext<T(ctx: Context<T): T; declare function useContext<T, R(ctx: Context<T, selector: (value: T) = R, isEqual?: (prev: R, next: R) = boolean): R; ",2021-01-25T02:21:08Z
424,766550514,"A quick test in recent versions of FF, Chrome, and Safari shows that Chrome, FireFox and Safari now have matching behavior: onInput fires while dragging the slider, onChange fires on release. I suspect it'd now make sense for React to also match this behavior. Code pen: GIF: ![Screen Recording 20210124 at 10 25 23 PM]( ",2021-01-25T05:27:17Z
425,766627733,Thank you for your fixes! We faced the same problems and are waiting for this changes to be published. can you shed some light on when it will be available in stores?,2021-01-25T08:02:57Z
426,766729412,"Support requests filed as GitHub issues often go unanswered. We want you to find the answer you're looking for, so we suggest the following alternatives: Coding Questions If you have a coding question related to React and React DOM, it might be better suited for Stack Overflow. It's a great place to browse through frequent questions about using React, as well as ask for help with specific questions. stackoverflow.com/questions/tagged/react Talk to other React developers There are many online forums which are a great place for discussion about best practices and application architecture as well as the future of React. ",2021-01-25T10:51:02Z
427,766734788,"It doesn't look like this bug report has enough info for one of us to reproduce it. Please provide a CodeSandbox ( a link to a repository on GitHub, or provide a minimal code example that reproduces the problem. Here are some tips for providing a minimal example: <! mui template: <! react template: ",2021-01-25T11:00:41Z
428,766735731,"It doesn't look like this bug report has enough info for one of us to reproduce it. Please provide a CodeSandbox ( a link to a repository on GitHub, or provide a minimal code example that reproduces the problem. Here are some tips for providing a minimal example: <! mui template: <! react template: ",2021-01-25T11:02:12Z
429,766749089,"Was there any changes to how fiber renders in 17.x? Maybe it all boils down to synchronous vs asynchronous rendering after setOpen if in React 16 it was async, but in 17.x it is optimized to be sync then that would explain the difference in behavior. I can't find any release notes about this, so i'm not sure whether this side effect is something that was considered or if it is actually some unintended side effect.",2021-01-25T11:25:31Z
430,766753809,"A thought on meaningful names: I personally don't mind if the output is like the example from point 2. Knowing that all hooks are executed in order makes it trivial to find the offending hook. I'd much rather have that solution earlier than a more ""elegant"" solution later.",2021-01-25T11:34:17Z
431,766823816,"I'm going to close this issue because I think the current state of this feature is fine and I have no plans to change it. If someone would like to submit a PR+proposal for a new behavior though, I will review it.",2021-01-25T13:41:19Z
432,766857404,"It was happening here, I deleted the folder node modules and ran npm update. So I solved the problem.",2021-01-25T14:34:04Z
433,766864803,This would be a bug with (different repository),2021-01-25T14:44:39Z
434,766888862,"Yes, please file this in the createreactapp repo: That repo is maintained by a different team. I would migrate it myself but GitHub doesn't support that to my knowledge.",2021-01-25T15:18:17Z
435,766941750, ReactDOM.unstable_createRoot is still giving me the same error.,2021-01-25T16:33:25Z
436,766959754," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 734ecb05e4c40021e74030381126f6823b18a06c </p ",2021-01-25T17:00:14Z
437,766959948," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 734ecb05e4c40021e74030381126f6823b18a06c </p ",2021-01-25T17:00:30Z
438,766961538,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA.",2021-01-25T17:02:43Z
439,766979375,Let's keep the discussion at [RFC 119]( and [RFC 118](,2021-01-25T17:27:17Z
440,767075534,This is a testonly change so I'm just going to merge it.,2021-01-25T19:58:10Z
441,767087043,Completed in ,2021-01-25T20:18:34Z
442,767096983,Merge it please,2021-01-25T20:36:08Z
443,767106437,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 6e691a674685f5e2f60bced3e38ebc41b31b3073: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-25T20:55:02Z
444,767108348," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 6e691a674685f5e2f60bced3e38ebc41b31b3073 </p ",2021-01-25T20:58:49Z
445,767109270," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 6e691a674685f5e2f60bced3e38ebc41b31b3073 </p ",2021-01-25T21:00:32Z
446,767112714," Thanks you for the solution, changing key helped me to solve the issue as well.",2021-01-25T21:06:41Z
447,767134704,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 28e7657d017aa2147cd8692f6f660b2de29ff345: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-25T21:49:14Z
448,767136192," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 28e7657d017aa2147cd8692f6f660b2de29ff345 </p ",2021-01-25T21:52:21Z
449,767136452," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 28e7657d017aa2147cd8692f6f660b2de29ff345 </p ",2021-01-25T21:52:52Z
450,767151713,"Hi, Could the changes in this PR, specifically adding the exports field in package.json, be backported to React 16? It'd help fix , though a release still needs to be made.",2021-01-25T22:20:56Z
451,767264361,Do you mind splitting the queueMicrotask stuff into its own PR? Then stack the rest on top,2021-01-26T03:26:47Z
452,767266447," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against cf96b275dcc8092466b6fdb08565483d93ff9f35 </p ",2021-01-26T03:30:32Z
453,767266587," <! 0 failure: 1 warning: Build job for bas... 1 markdown notices DangerID: dangeridstable; <table <thead <tr <th width=""50""</th <th width=""100%"" datadangertable=""true""Warnings</th </tr </thead <tbody<tr <td</td <tdBuild job for base commit is still pending: a6b5256a29b60620bdeb9266d4935cb59cc1258e</td </tr </tbody </table Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against cf96b275dcc8092466b6fdb08565483d93ff9f35 </p ",2021-01-26T03:30:36Z
454,767269284,I wasn't thinking that queueMicrotask would be integrated into the scheduler since it's not natively neither. They're separate things. Is there a reason that this isn't literally export scheduleMicrotask = typeof queueMicrotask === 'function' ? queueMicrotask : ... when it's available? That's the minimal overhead.,2021-01-26T03:32:08Z
455,767276167," I can break this up, do you agree with that this shouldn't be in scheduler? If so, where should this go?",2021-01-26T03:42:47Z
456,767276554,I'm not sure where this should live but the part I don't get is why it's adding it to a scheduler queue? It seems like it should just be straight passthrough. It could be part of scheduler just to have one convenient way to get all these polyfills but now I'm skeptical it belongs there because it's tempting to integrate it unnecessarily and you have to always pull in the whole scheduler even if you depend on only this function. Nobody else is going to do that so there's no code sharing benefit.,2021-01-26T03:44:22Z
457,767276931,I would do it as an export of Scheduler for now. js import queueMicrotask from 'scheduler/queueMicrotask'; ,2021-01-26T03:45:56Z
458,767276946,Maybe it should just be a host config?,2021-01-26T03:45:59Z
459,767277559,"Arguably all of the Scheduler methods should be host configs so we can possibly swap them out postTask one day without the Scheduler package indirection. (So, the same rationale for not wrapping queueMicrotask). But I don't want to bikeshed this right now so just put it somewhere and we can figure out the host config Scheduler boundary later.",2021-01-26T03:48:05Z
460,767278251,"If we publish a timer polyfill we'll likely put that in the Scheduler package, too. We also may need to publish our own Promise polyfill for older browsers, so it integrates properly with our message event listener. I don't think we're going to solve all of that in this PR.",2021-01-26T03:50:52Z
461,767278283,"I was thinking that for React Native it might be that discrete !== micro task. Since we can implement it differently there and some discrete might need to consider the thread they're on. Seems like Host Config might be the better injection point there but could be layered twice. Like the DOM host config defers to scheduler/queueMicrotask. Where as for scheduling work, it makes sense to have a shared one since it's public API and integrates with other scheduled things.",2021-01-26T03:50:56Z
462,767279783,"We could call it like queueDiscrete or something. That's fine, though feels like too early of an abstraction right now and I wouldn't block the PR over it. I would put a TODO and then revisit when React Native is ready.",2021-01-26T03:56:48Z
463,767279991," one key benefit of using the scheduler for this right now is that we call cancelCallback when the priority changes. With this implementation, that just works. With a separate queueMicrotask impl, we'd have to sort out that cancelation. I know had a suggestion for how to remove that dependency on cancelCallback, but I didn't entirely follow it.",2021-01-26T03:57:42Z
464,767280401,We can't cancel discrete work though. So that won't make sense anyway.,2021-01-26T03:59:13Z
465,767280492, The suggestion is to not cancel the microtask once it's scheduled ,2021-01-26T03:59:30Z
466,767281483,"We do need to cancel nondiscrete tasks once the priority changes to discrete (like a child that uses startTransition and a parent that doesn't), so we'll need to only cancel the nondiscrete tasks somehow, which seems nontrivial to unblock this.",2021-01-26T04:01:58Z
467,767281806,"Maybe it is trivial, and we just don't store the microtask on the node.",2021-01-26T04:03:02Z
468,767282944,Let's continue in the separate PR? That way we can focus on that by itself,2021-01-26T04:07:02Z
469,767287725,Seems good. Thanks ,2021-01-26T04:25:19Z
470,767291567," [from our docs]( The onChange event behaves as you would expect it to: whenever a form field is changed, this event is fired. We intentionally do not use the existing browser behavior because onChange is a misnomer for its behavior and React relies on this event to handle user input in real time. Going to close this as it seems to be working as documented, but thanks for submitting.",2021-01-26T04:39:15Z
471,767294535,"The scheduler is designed to be used with no build steps, which means using ES5 syntax. See for more context.",2021-01-26T04:50:51Z
472,767294845,Could you add a test for this?,2021-01-26T04:52:09Z
473,767305063," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 335f58ff7f5d24eb09750bb0ffc0e61235234da2 </p ",2021-01-26T05:28:12Z
474,767355476,"I have experienced the same problem with a react native app. basically am calling an asynchronous API call when the component mounts using useEffect() then update state on successful callback. This is on my login screen, after the user token is set, I get the error when the user is presented with the home screen.",2021-01-26T07:23:15Z
475,767366147,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 40e168abcecce13cb83901feeadf20359a1bbecb: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-26T07:48:32Z
476,767382958,"you can move react and reactdom from dependencies to devDependencies in your lib，this can ensure react consistency in project // package.json { ""dependencies"": {}, ""devDependencies"": { ""/react"": ""^17.0.0"", ""/reactdom"": ""^17.0.0"" ""react"": ""^17.0.0"", ""reactdom"": ""^17.0.0"", } } ",2021-01-26T08:25:05Z
477,767383859,"you can move react and reactdom from dependencies to devDependencies in your lib，this can ensure react consistency in project // package.json { ""dependencies"": {}, ""devDependencies"": { ""/react"": ""^17.0.0"", ""/reactdom"": ""^17.0.0"" ""react"": ""^17.0.0"", ""reactdom"": ""^17.0.0"", } } ",2021-01-26T08:26:50Z
478,767402867,"Ok I think I find the problem my env is jest + react native testing library + typescript, I found out that this problem occurs when resetModules: true in jest config. removing this flag solved my problem. update: here is a working fix without removing the flag: ",2021-01-26T09:02:53Z
479,767418792,Am I the only one expect React.useCallback should do state changes in a single batch/transaction for me ?,2021-01-26T09:31:46Z
480,767419759," 100% agree. There may be some down sides, but coding in React I feel like it's more intuative if useCallback and useEffect did everything in a batch.",2021-01-26T09:33:20Z
481,767449071," To be fair, it won't fix all the problem. e.g. javascript React.useCallback(async ()={ setState1(1); setState2(1); // likely batched, if await Promise.resolve(2); setState1(3); // won't batched setState2(3); // won't batched await Promise.resolve(4); setState1(5); //non batched await Promise.resolve(6); setState2(7); // non batched }, []); but at least React.useCallback could mitigate half of it, if they are going to it in the legacy mode without using anything unstable API. Or it may helps some eslint rule to detect the problem. I believe they want the blocking/concurrent mode in new React will eventually fix the cause. ",2021-01-26T10:25:18Z
482,767561701,Get outta here Ricky ,2021-01-26T14:03:47Z
483,767577882,I tried to use the defaultOption flag provided by commandlineargs for this (just adding it conditionally before calling commandlineargs) but it seems to only support boolean values. 🤷‍♂️ This is fine.,2021-01-26T14:29:06Z
484,767578141,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit f117fc4bc02124b5651968574f0c7500f9e1357b: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-26T14:29:28Z
485,767580359," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against f117fc4bc02124b5651968574f0c7500f9e1357b </p ",2021-01-26T14:32:44Z
486,767580407," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against f117fc4bc02124b5651968574f0c7500f9e1357b </p ",2021-01-26T14:32:48Z
487,767596243," If this sounds terribly confusing, it's because it barely makes sense.  ",2021-01-26T14:52:48Z
488,767608543,Going to close this; have pushed the branch with the tests I'd written. No fix yet though.,2021-01-26T15:11:06Z
489,767613642," <! 0 failure: 1 warning: Could not find bu... 1 markdown notices DangerID: dangeridexperimental; <table <thead <tr <th width=""50""</th <th width=""100%"" datadangertable=""true""Warnings</th </tr </thead <tbody<tr <td</td <tdCould not find build artifacts for base commit: 7cb9fd7ef822436aef13c8cbf648af1e21a5309a</td </tr </tbody </table Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 38888a3ae5c4fa7ad573e2b6b8683271a0eedabf </p ",2021-01-26T15:18:39Z
490,767613924," <! 0 failure: 1 warning: Could not find bu... 1 markdown notices DangerID: dangeridstable; <table <thead <tr <th width=""50""</th <th width=""100%"" datadangertable=""true""Warnings</th </tr </thead <tbody<tr <td</td <tdCould not find build artifacts for base commit: 7cb9fd7ef822436aef13c8cbf648af1e21a5309a</td </tr </tbody </table Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 38888a3ae5c4fa7ad573e2b6b8683271a0eedabf </p ",2021-01-26T15:19:03Z
491,767614175,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 38888a3ae5c4fa7ad573e2b6b8683271a0eedabf: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-26T15:19:24Z
492,767633251,"Going to push the ""fix"" even though I imagine it's not acceptable and we just need to add more integration tests to cover the case had in mind with two wrappers.  ",2021-01-26T15:46:41Z
493,767672868,"Tagging to hear your thoughts about this, not because my current ""solution"" is landable.",2021-01-26T16:44:16Z
494,767738930,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit cf96b275dcc8092466b6fdb08565483d93ff9f35: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-26T18:27:35Z
495,767775392,Proposed solution (really just a better warning and error message) in ,2021-01-26T19:30:02Z
496,767776973,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit eb42de7bc5b191817d596cb732bbe0f13ada3bc0: |Sandbox| Source | ||| |[React]( Configuration | |[useMutableSource]( Issue | ",2021-01-26T19:32:58Z
497,767792885,Whoops forgot to gate the new tests to .,2021-01-26T20:01:35Z
498,767810434,"Ah nice to find this. This bug affects many form libraries for some reason, so we are seeing it a lot in Blitz apps (with concurrent mode)",2021-01-26T20:33:18Z
499,767829535, Is that always true? We wouldn't pop anything for primitive hooks that are called directly I believe we pop at least once because the call location of the primitive should be different between the two. Once we push a primitive we also set the current levelChildren to be that of the primitive so we need to pop it to get the shared parent. I tried before asking and it did not seem like that was the case.,2021-01-26T21:09:55Z
500,767895826,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 58b2e9fdde79d70e39af329c75c5285fa7391a44: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-26T23:24:30Z
501,767896602," <! 0 failure: 1 warning: Could not find bu... 1 markdown notices DangerID: dangeridstable; <table <thead <tr <th width=""50""</th <th width=""100%"" datadangertable=""true""Warnings</th </tr </thead <tbody<tr <td</td <tdCould not find build artifacts for base commit: 49cd77d24a5244d159be14671654da63932ea9be</td </tr </tbody </table Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 58b2e9fdde79d70e39af329c75c5285fa7391a44 </p ",2021-01-26T23:26:27Z
502,767897204," <! 0 failure: 1 warning: Could not find bu... 1 markdown notices DangerID: dangeridexperimental; <table <thead <tr <th width=""50""</th <th width=""100%"" datadangertable=""true""Warnings</th </tr </thead <tbody<tr <td</td <tdCould not find build artifacts for base commit: 49cd77d24a5244d159be14671654da63932ea9be</td </tr </tbody </table Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 58b2e9fdde79d70e39af329c75c5285fa7391a44 </p ",2021-01-26T23:27:52Z
503,767901911,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 0711bb0bbfa9cbea9319b0c63c411af49c9259eb: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-26T23:39:26Z
504,767902615," <! 0 failure: 1 warning: Build job for bas... 1 markdown notices DangerID: dangeridstable; <table <thead <tr <th width=""50""</th <th width=""100%"" datadangertable=""true""Warnings</th </tr </thead <tbody<tr <td</td <tdBuild job for base commit is still pending: a6b5256a29b60620bdeb9266d4935cb59cc1258e</td </tr </tbody </table Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 0711bb0bbfa9cbea9319b0c63c411af49c9259eb </p ",2021-01-26T23:41:25Z
505,767902637," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 0711bb0bbfa9cbea9319b0c63c411af49c9259eb </p ",2021-01-26T23:41:30Z
506,767902924,Thanks for the feedback. I went with the HostConfig strategy and created a new stack of PRs with the head [here](,2021-01-26T23:42:15Z
507,767902981,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit ccfee9ad3b20ab38ed7a263fdf7861244e729212: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-26T23:42:24Z
508,767903241," <! 0 failure: 1 warning: Could not find bu... 1 markdown notices DangerID: dangeridexperimental; <table <thead <tr <th width=""50""</th <th width=""100%"" datadangertable=""true""Warnings</th </tr </thead <tbody<tr <td</td <tdCould not find build artifacts for base commit: 9c32622cf04e70dd40463ece25e83b7cc311b0ed</td </tr </tbody </table Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against ccfee9ad3b20ab38ed7a263fdf7861244e729212 </p ",2021-01-26T23:43:07Z
509,767903968,"As you're likely aware — Concurrent Mode is experimental, and there are likely both more bugs, and more breaking changes coming. (E.g. an upcoming breaking change will make more stuff synchronous, which might end up resolving this.) I think form libraries are completely within their rights to _not_ fix this because the bug is probably ours, and we explicitly don't recommend anyone writing stable software to rely on experimental features in production. ",2021-01-26T23:45:07Z
510,767904638,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 458f04ea08900c36a75b37a30df22be324554bb1: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-26T23:46:58Z
511,767905346," startTransition wont work in nonexperimental gated tests. Would you just gate the tests that use it now, or duplicate them?",2021-01-26T23:48:47Z
512,767908039," Fine to gate them. There's a TODO to fix the www classic builds (which are mistakenly interpreted as ""stable"") but experimental should work in the interim.",2021-01-26T23:55:51Z
513,767908690, that link doesn't work for me,2021-01-26T23:57:29Z
514,767910837,Here: ,2021-01-27T00:03:21Z
515,767940323,"fixed flow, ran yarn prettier, added unit tests as suggested: Passing a ref to a fabric component to the Fabric JS renderer calls the fabric native method Passing a ref to a paper component to the Paper JS renderer calls the paper native method Passing a ref to a paper component to the Fabric JS renderer calls the paper native method Passing a ref to a fabric component to the Paper JS renderer calls the fabric native method Passing a nonref to Paper JS render is an error Passing a nonref to Fabric JS render is an error",2021-01-27T01:17:42Z
516,767966668, I can have a try. There are two versions of files in reactresonciler(old.js and new.js). Which should I modify?,2021-01-27T02:21:40Z
517,768020011,Not sure which ones you'll get on build.. Try changing both and see which gets used?,2021-01-27T04:27:57Z
518,768055012,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 99fef31f9d80372066cb6839cab92316efb0a92c: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-27T06:04:51Z
519,768055336,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit a30d15f8df39b9140283a88cdae58ac02435826a: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-27T06:05:34Z
520,768056450," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 99fef31f9d80372066cb6839cab92316efb0a92c </p ",2021-01-27T06:08:09Z
521,768056616," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 99fef31f9d80372066cb6839cab92316efb0a92c </p ",2021-01-27T06:08:31Z
522,768056956," <! 0 failure: 1 warning: Could not find bu... 1 markdown notices DangerID: dangeridexperimental; <table <thead <tr <th width=""50""</th <th width=""100%"" datadangertable=""true""Warnings</th </tr </thead <tbody<tr <td</td <tdCould not find build artifacts for base commit: 9c32622cf04e70dd40463ece25e83b7cc311b0ed</td </tr </tbody </table Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against a30d15f8df39b9140283a88cdae58ac02435826a </p ",2021-01-27T06:09:18Z
523,768081437,Will do.,2021-01-27T07:05:04Z
524,768081767,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 3cc1f205096d844ab9044b6b59c464dfbd03f6c0: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-27T07:05:42Z
525,768241769,Thanks for the report. React version:v17.0.1 The codesandbox is using 0.0.0experimental4ead6b530. Could you clarify for which version you want to report the bug?,2021-01-27T12:06:44Z
526,768250830," Thanks for the report. React version:v17.0.1 The codesandbox is using 0.0.0experimental4ead6b530. Could you clarify for which version you want to report the bug? I tried it in v17.0.1 and this problem still occurs, because the function updateEffectImpl has not changed. ",2021-01-27T12:23:58Z
527,768260630, Could you either update the issue or the codesandbox so that we avoid potential confusion when the bug is reported for one version but the repro uses a different one? yeah! i have updated the version of React in the codesandbox ,2021-01-27T12:43:44Z
528,768273119,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 5c24bb5fc195458719b943fdeb885d4bd29b85af: |Sandbox| Source | ||| |[React]( Configuration | |[ReactHooks]( Issue | |[ReactHooks]( Issue | |[React]( Issue | ",2021-01-27T13:07:14Z
529,768273820," The way this currently works is that we always assign the same lane to all transitions. It's impossible for one transition to finish without also finishing all the others. Oh I didn’t realize this was already fixed (albeit in a coarse way). Still, we do currently show all of them as “busy”, right — and that would need to be fixed too? Just to confirm the behavior I saw in the demo makes sense. ",2021-01-27T13:08:29Z
530,768274725," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 5c24bb5fc195458719b943fdeb885d4bd29b85af </p ",2021-01-27T13:10:01Z
531,768275115," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 5c24bb5fc195458719b943fdeb885d4bd29b85af </p ",2021-01-27T13:10:42Z
532,768303716,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 5dde29042b7d3080a593981ef969d4f6e4d68615: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-27T13:59:31Z
533,768318381,"Correct, the multiple pending spinners issue needs a separate fix",2021-01-27T14:22:38Z
534,768389885,"Is the behavior new in some version, or always been like this?",2021-01-27T16:04:50Z
535,768399050," Is the behavior new in some version, or always been like this? It always has been™. Tested with [a codesandbox using 16.8](",2021-01-27T16:18:31Z
536,768449649,"Looks like there's a DevTools test failure. I'm guessing it's a legit change, so the snapshot just needs to be updated. Have you looked into that yet?",2021-01-27T17:32:30Z
537,768520945,Updates look great! Thanks!,2021-01-27T19:26:24Z
538,768568318,Have you used CORS on your Nodejs server? ,2021-01-27T20:50:16Z
539,768591592,It's not clear to me what this issue is reporting. Can you provide some example code and then describe what you expect it to do and what it _actually_ does that makes you think there's a bug?,2021-01-27T21:33:16Z
540,768661371,Any update on this?,2021-01-28T00:08:34Z
541,768862542," What exactly are you expecting to be updated? They started using code actions for this fix, if you want an old behavior, enable enableDangerousAutofixThisMayCauseInfiniteLoops option in eslint config.",2021-01-28T07:37:24Z
542,768899811,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 536e60f3cf154c42336d3f7fcc9ca7078c825987: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-28T08:52:41Z
543,768900970," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 536e60f3cf154c42336d3f7fcc9ca7078c825987 </p ",2021-01-28T08:54:30Z
544,768952070, Worth noting that the example explicitly says not to copypaste this code Why? That code seems useful,2021-01-28T10:21:41Z
545,769150265,I don't think React would do anything to reload your page given the example code above. But can you share a full repro (code that we can run) that shows this happening? Here's a Code Sandbox that's similar if you'd like a starting point: ,2021-01-28T15:09:57Z
546,769159660,"(It's still possible we'll offer a higherlevel API that enforces these constraints, but I wanted to document the current state.)",2021-01-28T15:22:23Z
547,769170124,"Well, if your honest answer is that we should simply turn it off, then I guess we can follow it. I'll be honest though, it sounds suspiciously like the line ""why don't we just disable warnings as errors"", which I've heard about 1000 times over my years as a TD (and at one point started a swear box for programmers that even suggest it!). ",2021-01-28T15:37:17Z
548,769173231,"Yes, my advice is to turn it off for now if: (1) it's causing a lot of warning/error messages that are interfering with your daily development (particularly if a lot of them are not actionable because they are in external libraries) and especially if (2) you aren't planning to start using the new createRoot API in the near future. Perhaps we'll come up with improvements to the suggested upgrade path before we release createRoot as stable. We're always thinking about this.",2021-01-28T15:41:45Z
549,769185307,"thanks, this contract explanation really helps me to solve the problem",2021-01-28T15:59:02Z
550,769259476,"Will do thx. If you have a chance, I'd appreciate it if you manage to notify this thread if things change.",2021-01-28T17:46:26Z
551,769363989,Looks like this PR regressed DevTools. Seeing lots of errors when building DevTools with CI build from this revision that don't occur on the one before it: reactdom.development.js?0e6b:12358 Uncaught (in promise) TypeError: Cannot read property 'lanes' of undefined at entangleTransitions (reactdom.development.js?0e6b:12358) at refreshCache (reactdom.development.js?0e6b:16739) at eval (inspectedElementCache.js?c15b:169) at startTransition (react.development.js?e562:2351) at eval (inspectedElementCache.js?c15b:163) ,2021-01-28T20:27:04Z
552,769372153,Turns out this was caused by a React regression in deeeaf1d222ba29bcce6eda0a1c4423ce10e727a which is the version my local DevTools was built with. Fixing separately.,2021-01-28T20:37:40Z
553,769394346,Fixed in ,2021-01-28T21:06:44Z
554,769395972,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 34465b1e609e76284c5892c62c56331ab3bed655: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-28T21:08:57Z
555,769397821,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 29506ef390b532a6c83bd6dd8e7450eb49c81f87: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-28T21:11:26Z
556,769397872," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 34465b1e609e76284c5892c62c56331ab3bed655 </p ",2021-01-28T21:11:31Z
557,769398365," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 34465b1e609e76284c5892c62c56331ab3bed655 </p ",2021-01-28T21:12:10Z
558,769400317," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 29506ef390b532a6c83bd6dd8e7450eb49c81f87 </p ",2021-01-28T21:14:43Z
559,769401162," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 29506ef390b532a6c83bd6dd8e7450eb49c81f87 </p ",2021-01-28T21:15:37Z
560,769458997,"Rather strange that this case is handled different on reactnative from react. In RN if you pass 16, it is interpreted as 16 pixels...in React it's interpreted as ??? This makes sharing a theme between the two more difficult. Sure we can use 16px for the field, but this seems quite arbitrary.",2021-01-28T23:08:57Z
561,769575673,"Any updates on this? I'm using mui's _TextField_ so there is no way for me to remove the value attribute. Can anybody look at this please? Thanks Workaround If you need the native autofill from Firefox you are currently not allowed to use the attribue value (value={name})! Instead you have to use useRef={inputEl} and get the value from there, with inputEl.current.value Here is an updated code sample: jsjsx export default function ComposedTextField() { const inputEl = useRef(null); function handleChange3(event) { setName3(event.target.value); } function handleSubmit(event) { console.log(inputEl.current.value); } <input id=""componentsimple3"" ref={inputEl} autoComplete=""on"" onChange={handleChange3} / ",2021-01-29T05:00:38Z
562,769631424,"I found the culprit of this behavior. I'm developing in vscode and in there I'm using ""Live Server"" from Ritwick Dey to host builds locally without much of a hassle. This Live Server triggers the page reload. That's why I don't see any errors or something. React has nothing to do with it.",2021-01-29T07:27:02Z
563,769663961,"Using function _ () instead of () = seems to be fine with eslint. js const RenderFunction = ({ children }) = children(); const MyComponent = ({ shouldRenderHook }) = shouldRenderHook ? ( <RenderFunction {function _ () { const [state, setState] = React.useState(0); return ( <div State: {state} <button onClick={() = setState(currentState = currentState + 1)} Increment </button </div ); }} </RenderFunction ) : ( <divRendering the hook shortly…</div ); ",2021-01-29T08:41:47Z
564,769724238,"I've been seeing these errors on regex101.com quite a lot, around 20,000 times in the past 14 days. After some googling I found this, and it seems like this might be the root cause. What are the mitigations? Is there any viable workaround?",2021-01-29T10:36:14Z
565,769803903," What do you mean, it ignores the mouse events? This is a strange case and you can write onChange={function() {}} to suppress the warning. 6 years late but essentially this! jsx <input type=""url"" value={value} onChange={suppressMissingOnChangeHandlerWarning} onBlur={e = onChange(e.currentTarget.value)} / Works great! In case it is unclear, suppressMissingOnChangeHandlerWarning is just a function declared elsewhere so the prop is stable and sort of documented. js function suppressMissingOnChangeHandlerWarning() {} ",2021-01-29T13:26:35Z
566,769815510,Thanks for sharing your findings!,2021-01-29T13:49:05Z
567,769816620,Ping :),2021-01-29T13:51:07Z
568,769854700,Okay . Updated the error message wording and rebased.,2021-01-29T14:58:06Z
569,769857675,Sorry . I don't think I have enough context to answer these questions without spending a good bit of time digging into aggrid to figure out what you're talking about (and I don't have time to do that at the moment).,2021-01-29T15:03:05Z
570,769874472,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit ec4b81d5d227978f8ddfb24b7bc5f6e414a25e36: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-29T15:31:18Z
571,769875583," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against ec4b81d5d227978f8ddfb24b7bc5f6e414a25e36 </p ",2021-01-29T15:33:16Z
572,769875658," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against ec4b81d5d227978f8ddfb24b7bc5f6e414a25e36 </p ",2021-01-29T15:33:24Z
573,769885930,Thanks !,2021-01-29T15:51:22Z
574,769905057,"I'm sorry you experienced this bug!  Looks like this problem was already reported though () so I'm going to mark this issue as a duplicate and close it. If you have additional context that might help us repro this problem, please leave a comment on the other issue! Extra repro cases would be very helpful for this issue in particular. Thank you",2021-01-29T16:23:42Z
575,769949768, Thanks for the repro! This helped a lot identifying the issue.,2021-01-29T17:44:25Z
576,770028705,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 97ca787b516935f57a724cebdabf9acad19b668b: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-29T20:20:21Z
577,770036281,Oops I need to tweak this to use two flags: one to enable it for FB only and one to allow developers to optout. The reason here is that I can't set a GK to 100% of employees. Will update momentarily.,2021-01-29T20:36:51Z
578,770054833,"I solved this issue on a Next.js project using these two functions during the server side rendering stage. [Live codesandbox example]( javascript const checkImageUrl = async (imageUrl: string): Promise<boolean = { try { const response = await axios.get(imageUrl) if (response.status === 200) return true else return false } catch (error) { return false } } export const checkAndFormatImageUrlWithFallback = async (imageUrl: string, fallbackUrl: string): Promise<string = { const isValidImageUrl = await checkImageUrl(imageUrl) return isValidImageUrl ? imageUrl : fallbackUrl } ",2021-01-29T21:17:24Z
579,770065365,CI test ci/circleci: yarn_testr=wwwclassic env=development variant looks like it failed but opening it in CI shows all tests passed. They just took a little too long to finish.,2021-01-29T21:40:54Z
580,770143594,You are welcome! i am very happy to do this,2021-01-30T02:49:12Z
581,770172956,"This is a minor detail but some of this is alleviated by simply doing. js function useMyHook(initialValue) { return React.useState(initialValue) } function MyComponent() { const [value, setValue] = useMyHook(0) return ""..."" } The developer tools will display this as a MyHook with a State hook nested under it. It allows you to create a heading by simply grouping hooks in function names. ![image]( If you have a really big and complex component this might not be possible to do but you probably want to break down that big complex component into something smaller anyway...",2021-01-30T07:42:15Z
582,770187614,"Since this was closed, I opened a new one: Someone has linked this issue to it: There you find another workaround: Maybe this works for you. Sadly, Firefox won't change its behaviour and on the React side, no one reacting ;(",2021-01-30T10:06:40Z
583,770188990,": Are there any plans to fix this? It almost 2 years since the report and at least in my eyes this is a huge UX bug. This bug affects other frameworks (antd, material UI): muiorg/materialui antdesign/antdesign I'm also not getting it, why this one should be a breaking change. If autoComplete is ""on"" react could to this setAttribute('value', ''); under the hood and it would be fine. Or are there any side effects if you are doing this?",2021-01-30T10:18:41Z
584,770246643,"Maybe I don't understand how ""highlight updates when components render"" should work. It always highlights all components, doesn't matter they did render or not. I would think it should highlight only the ones that did render",2021-01-30T17:20:09Z
585,770285705," If I understand correctly, the mechanism you're using here to detect a renderphase update depends on StrictMode's double rendering. The mutation is detected during the second render, and then you warn. After I posted this I started to secondguess myself because console messages are disabled during the double render, so how would your warning work... ... but then I remembered our other double invocation: the one that wraps the begin phase in invokeGuardedCallback. So you actually do warn during the Strict Mode double render, but that one gets suppressed. The warning that doesn't get suppressed is the invokeGuardedCallback one.",2021-01-30T21:48:55Z
586,770288885,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit c16fe14797c727c6c194bffa6103ed01163de919: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-30T22:15:39Z
587,770337312,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 8fafb26b7e67b0ee5d72790ea8b5f90e25ef3dc8: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-31T06:56:41Z
588,770337695," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 8fafb26b7e67b0ee5d72790ea8b5f90e25ef3dc8 </p ",2021-01-31T07:00:46Z
589,770337947," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 8fafb26b7e67b0ee5d72790ea8b5f90e25ef3dc8 </p ",2021-01-31T07:03:30Z
590,770345486,Please experiment with markdown (e.g. or pull requests (see for further documentation) on a personal repository. Opening PRs creates notifications for maintainers and everyone watching this repository.,2021-01-31T08:20:51Z
591,770345943,"It doesn't look like this bug report has enough info for one of us to reproduce it. I tried it in a codesandbox but that doesn't produce a hydration warning: Please provide a CodeSandbox ( a link to a repository on GitHub, or provide a minimal code example that reproduces the problem. Here are some tips for providing a minimal example: <! mui template: <! react template: ",2021-01-31T08:25:01Z
592,770412628,Im using WebStorms and have the same issue.,2021-01-31T16:54:47Z
593,770441243,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 45691c924e4177112ff99e85b54a36e58a113f23: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-31T19:59:58Z
594,770442014," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 45691c924e4177112ff99e85b54a36e58a113f23 </p ",2021-01-31T20:04:52Z
595,770442087," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 45691c924e4177112ff99e85b54a36e58a113f23 </p ",2021-01-31T20:05:22Z
596,770445328,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 5c0aef6682062944b87baceafcb3a808a254382e: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-31T20:29:03Z
597,770445883," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 5c0aef6682062944b87baceafcb3a808a254382e </p ",2021-01-31T20:32:37Z
598,770445968," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 5c0aef6682062944b87baceafcb3a808a254382e </p ",2021-01-31T20:33:10Z
599,770447171,"Well, this is embarrassing. It seems I had switched from using from renderToString to using renderToStaticMarkup at some point for unknown reasons. My page was quite simple so didn't actually notice this was happening other than this hydration notice. I do apologise for this. I hope you didn't waste too much time looking into this. ",2021-01-31T20:41:05Z
600,770458842,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 964fd590907830eabd92bce7815b6927c496acb7: |Sandbox| Source | ||| |[React]( Configuration | ",2021-01-31T22:03:57Z
601,770459334," <! 0 failure: 1 warning: Could not find bu... 1 markdown notices DangerID: dangeridexperimental; <table <thead <tr <th width=""50""</th <th width=""100%"" datadangertable=""true""Warnings</th </tr </thead <tbody<tr <td</td <tdCould not find build artifacts for base commit: 604bbcd87d6df2cf8554ae410776ff61b0795210</td </tr </tbody </table Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 964fd590907830eabd92bce7815b6927c496acb7 </p ",2021-01-31T22:07:57Z
602,770459678," <! 0 failure: 1 warning: Could not find bu... 1 markdown notices DangerID: dangeridstable; <table <thead <tr <th width=""50""</th <th width=""100%"" datadangertable=""true""Warnings</th </tr </thead <tbody<tr <td</td <tdCould not find build artifacts for base commit: 604bbcd87d6df2cf8554ae410776ff61b0795210</td </tr </tbody </table Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 964fd590907830eabd92bce7815b6927c496acb7 </p ",2021-01-31T22:10:07Z
603,770518187," Hi, we've decided last week that it's shipped in 87 unless we'd get some bug reports which can block the release. And thank you for the feedback about the getTargetRanges!",2021-02-01T02:17:24Z
604,770518968,"Oops, 87 will be shipped March, 23. ",2021-02-01T02:19:40Z
605,770550767,"Hey , thanks for submitting. How would you improve the error?",2021-02-01T04:12:25Z
606,770553570,"Hey , do you have any code snippets to show what PageHome.Layout is? If it's a class component, then the error is correct. If not, I'd like to talk a closer look.",2021-02-01T04:22:22Z
607,770556342,Looks like you already opened a let's discuss this there.,2021-02-01T04:32:35Z
608,770557079,"Hey , thanks for the suggestion. Looks like tests are failing and the whitespace is off. This seems like an improvement to me, but I defer to .",2021-02-01T04:35:14Z
609,770559395,"Hey , the change from React 16 to 17 is a major change, which means it could include breaking changes. Please reach out to that library to report the bug, they may have a compatible version already available.",2021-02-01T04:43:42Z
610,770651939," We're actively looking to adopt beforeinput internally at Facebook to power a new text editor that is under development and we're also keen to see how React can adopt this too. Just curious, if that's no secret, are you working on something other than Draft.js that would be opensourced at some point or is it purely an internal project?",2021-02-01T07:57:07Z
611,770697263," Yes, I'm working on something other than Draft.js. I expect the project to be eventually opensourced at some point too, although no guarantees or dates as it's too early :)",2021-02-01T09:06:04Z
612,770830299,"For the next person finding this, this was added as a part of [/react.9.20](",2021-02-01T12:45:26Z
613,770839486,Is this a regression from v17 or are you able to reproduce still with v16? If it is a regression then it could have the same root cause as (the way React attaches events has changed).,2021-02-01T13:01:00Z
614,770914131,Opened an internal Diff with an alternate way of adding this warning (via a wrapper around the createroot entry points).,2021-02-01T14:52:10Z
615,771050973,Closing in favor of the Facebook wrapper approach mentioned above.,2021-02-01T18:12:37Z
616,771121486,The problem with that approach is that it requires 1) a virtual dom and 2) to create extra components for testing that's a lot of heavy machinery to require just to test a hookbased state machine that itself doesn't have any knowledge of a DOM. The dispatcher is effectively the handler for the various react hooks useXxx functions. Providing a way to inject an alternate dispatcher implementation (or providing another way to intercept calls to those hook functions) would make react hooks more testable.,2021-02-01T20:03:56Z
617,771122494," it requires 1) a virtual dom We publish a test renderer package as well, if you'd like to avoid using something like JSdom. ",2021-02-01T20:05:43Z
618,771123310," Throwing an error that's only thrown in DEV seemed weird to me (and still does) Yeah I want to follow up on this topic because I do wonder if we should be catching these. Added to next meeting's notes. as does checking the console in this way Yeah we can do this more explicitly, like by setting some global context variable. Went for this for now since it's how the mock Scheduler's yieldValue method detects it, too.",2021-02-01T20:07:05Z
619,771124315," Went for this for now since it's how the mock Scheduler's yieldValue method detects it, too. Oh I actually didn't know that.",2021-02-01T20:08:47Z
620,771161511,"I get the following error when trying to invoke preventDefault on a touch event (from onTouchStart). reactdom.development.js:6202 Unable to preventDefault inside passive event listener invocation. Therefore, with the latest version of React, this issue's title (touchstart preventDefault() does not prevent click event.) is still an issue. Can this issue be reopened?",2021-02-01T21:12:32Z
621,771223867,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 387a645da1756d08ce3e4adf055e7ba49d6018b1: |Sandbox| Source | ||| |[React]( Configuration | ",2021-02-01T23:07:21Z
622,771299956,"thanks , this is my code snippets , i use functional component js const PageHome: React.FC = () = { return ( <div Home Content </div ); }; PageHome.Layout = ({ children }) = { return ( <Layout {children} </Layout ); }; export default PageHome; ",2021-02-02T02:20:35Z
623,771373271,"Hey , thanks for submitting but it doesn't appear that this is a bug. As the error says, ""To fix, cancel all subscriptions and asynchronous tasks in a useEffect cleanup function"". example will handle the second case, where the request returns but the component is unmounted.",2021-02-02T05:29:50Z
624,771405942, I had the same issue and I resolved it by adding: alias: { react: path.resolve('./node_modules/react') } to resolve property in webpack config of my main app. It's was obviously my mistake of using two copies of React but I agree that it would be great if the error message was better. I think this is maybe similar to: It worked for me too! ,2021-02-02T06:43:01Z
625,771507202,"Support requests filed as GitHub issues often go unanswered. We want you to find the answer you're looking for, so we suggest the following alternatives: Coding Questions If you have a coding question related to React and React DOM, it might be better suited for Stack Overflow. It's a great place to browse through frequent questions about using React, as well as ask for help with specific questions. stackoverflow.com/questions/tagged/react Talk to other React developers There are many online forums which are a great place for discussion about best practices and application architecture as well as the future of React. ",2021-02-02T09:43:55Z
626,771556219," A real world example would help in understanding your problem. Right now I can only guess what you're doing. I have trie this and it still doesnt work for me <pre useEffect(() = { let mounted = true; if (mounted) { let URL = config.API_URL+""Transactions/getAll/""+page; getTransactions(URL); } return () = { mounted = false; }; }, [isLoading]); const getTransactions = async URL = { try { let response = await fetch(URL); let json = await response.json(); if (json.length 0) { await setTransactions(json); await setIsLoading(false); } else { await setTransactions([]); await setIsLoading(false); } } catch (error) { console.log(error); } }; </pre",2021-02-02T11:04:20Z
627,771572703,"Thanks for the report. Your useExternalState hook has a sideeffect during render: updaters.add(forceUpdate);. Once you move it into the effect, batched and unbatched updates work consistent: diff function useExternalState() { const forceUpdate = useReducer(v = v + 1, 0)[1]; updaters.add(forceUpdate); useEffect(() = { + updaters.add(forceUpdate); return () = updaters.delete(forceUpdate); }, [forceUpdate]); return externalState; } The issue on the zustand repo was closed. Why do you think this is an issue with React?",2021-02-02T11:32:39Z
628,771703395,"Destructuring works fairly poorly if your props are a disciminated union, eg: type Props = | { kind: 'range' value: Date[] } | { kind: 'day' value: Date } | { kind: 'timer' value: number } // ... Destructuring props breaks the discriminating union. This is a rare enough usecase for me personally that I'm fine with disabling the lint rule, but I'd be interested to know if anyone has a better solution ",2021-02-02T15:11:31Z
629,771712629,"thanks, it worked for me.",2021-02-02T15:24:34Z
630,771827548,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit a295b48bb7d07237f44a72700356daf252ce1a94: |Sandbox| Source | ||| |[React]( Configuration | ",2021-02-02T17:39:32Z
631,771828059," <! 0 failure: 1 warning: Could not find bu... 1 markdown notices DangerID: dangeridexperimental; <table <thead <tr <th width=""50""</th <th width=""100%"" datadangertable=""true""Warnings</th </tr </thead <tbody<tr <td</td <tdCould not find build artifacts for base commit: 3e0bdbefa3cb78c5534b808772ed6afad7c34827</td </tr </tbody </table Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against a295b48bb7d07237f44a72700356daf252ce1a94 </p ",2021-02-02T17:40:08Z
632,771828397," <! 0 failure: 1 warning: Could not find bu... 1 markdown notices DangerID: dangeridstable; <table <thead <tr <th width=""50""</th <th width=""100%"" datadangertable=""true""Warnings</th </tr </thead <tbody<tr <td</td <tdCould not find build artifacts for base commit: 3e0bdbefa3cb78c5534b808772ed6afad7c34827</td </tr </tbody </table Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against a295b48bb7d07237f44a72700356daf252ce1a94 </p ",2021-02-02T17:40:28Z
633,771878616,"Well, the solution is maybe a little heavy handed, but I think I've got a viable fix. Ready for another look, ",2021-02-02T18:41:04Z
634,771948019,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 64631978e589fe276b634361812d038670ffd09c: |Sandbox| Source | ||| |[React]( Configuration | ",2021-02-02T20:14:08Z
635,771949357," <! 0 failure: 1 warning: Could not find bu... 1 markdown notices DangerID: dangeridstable; <table <thead <tr <th width=""50""</th <th width=""100%"" datadangertable=""true""Warnings</th </tr </thead <tbody<tr <td</td <tdCould not find build artifacts for base commit: 3e0bdbefa3cb78c5534b808772ed6afad7c34827</td </tr </tbody </table Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 64631978e589fe276b634361812d038670ffd09c </p ",2021-02-02T20:15:55Z
636,771949625," <! 0 failure: 1 warning: Could not find bu... 1 markdown notices DangerID: dangeridexperimental; <table <thead <tr <th width=""50""</th <th width=""100%"" datadangertable=""true""Warnings</th </tr </thead <tbody<tr <td</td <tdCould not find build artifacts for base commit: 3e0bdbefa3cb78c5534b808772ed6afad7c34827</td </tr </tbody </table Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 64631978e589fe276b634361812d038670ffd09c </p ",2021-02-02T20:16:15Z
637,772012376,ಠ_ಠ ,2021-02-02T21:43:06Z
638,772059082,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 74ac980df356d37f353fee78409df3e5232e25f4: |Sandbox| Source | ||| |[React]( Configuration | ",2021-02-02T22:36:09Z
639,772060113," <! 0 failure: 1 warning: Could not find bu... 1 markdown notices DangerID: dangeridexperimental; <table <thead <tr <th width=""50""</th <th width=""100%"" datadangertable=""true""Warnings</th </tr </thead <tbody<tr <td</td <tdCould not find build artifacts for base commit: 3e0bdbefa3cb78c5534b808772ed6afad7c34827</td </tr </tbody </table Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 74ac980df356d37f353fee78409df3e5232e25f4 </p ",2021-02-02T22:37:44Z
640,772060124," <! 0 failure: 1 warning: Could not find bu... 1 markdown notices DangerID: dangeridstable; <table <thead <tr <th width=""50""</th <th width=""100%"" datadangertable=""true""Warnings</th </tr </thead <tbody<tr <td</td <tdCould not find build artifacts for base commit: 3e0bdbefa3cb78c5534b808772ed6afad7c34827</td </tr </tbody </table Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 74ac980df356d37f353fee78409df3e5232e25f4 </p ",2021-02-02T22:37:45Z
641,772083520,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA.",2021-02-02T23:21:44Z
642,772084885," <! 0 failure: 1 warning: Failed to read bu... DangerID: dangeridstable; <table <thead <tr <th width=""50""</th <th width=""100%"" datadangertable=""true""Warnings</th </tr </thead <tbody<tr <td</td <tdFailed to read build artifacts. It's possible a build configuration has changed upstream. Try pulling the latest changes from the main branch.</td </tr </tbody </table <p align=""right"" Generated by :no_entry_sign: <a href="" against f24da1c4ddd53cfd20aeb07643941419fb5fffb3 </p ",2021-02-02T23:24:50Z
643,772171318,"[ By understanding this article, setting a variable to control whether the update of state is an anti pattern?",2021-02-03T02:31:41Z
644,772178483,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 65b3132ce04c720e7804f7658b4f735ffe79f7e5: |Sandbox| Source | ||| |[React]( Configuration | ",2021-02-03T02:52:52Z
645,772179557," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 65b3132ce04c720e7804f7658b4f735ffe79f7e5 </p ",2021-02-03T02:55:40Z
646,772179704," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 65b3132ce04c720e7804f7658b4f735ffe79f7e5 </p ",2021-02-03T02:56:01Z
647,772226649,"Cool, is there any userland example of it so we can try this?",2021-02-03T04:52:47Z
648,772361851,"Consuming multiple contexts is very good feature as it reduces deep level of rendered component tree, which is good for performance. Also not everyone yet uses hooks api. ",2021-02-03T09:23:17Z
649,772402934," hi can you check out this, is this a correct concurrent mode ready cache? ",2021-02-03T10:27:57Z
650,772417257,This is proof of concept that this feature can be implemented with ease ,2021-02-03T10:51:53Z
651,772448291,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 0e0ac678765e068be18e4f6030e92c3f8a4bc7ff: |Sandbox| Source | ||| |[React]( Configuration | ",2021-02-03T11:44:54Z
652,772524640,Works This API has not been released except for our _experimental_ NPM release. React DevTools builds from that release though and you can see an example of the new cache used in it if you'd like to: ,2021-02-03T13:55:02Z
653,772528039,"How did break the commit param? That PR only affected the scripts/release/downloadexperimentalbuild.js which I'm the only person who uses (and I tested it). Edit Oh, it broke it if you pasted in the reproducible run with the build param. Gotcha!",2021-02-03T13:56:49Z
654,772554205,"OK, have found the solution for me. I am using NginX and did not have quite the correct settings for WordPress. try_files $uri $uri/ /index.php$is_args$args; I have updated my Wiki and it is here: Regards, Paul ",2021-02-03T14:33:36Z
655,772578394,I think I ran through all of the various scripts and the README to make sure things now match up and work.,2021-02-03T15:07:22Z
656,772578907,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 3203821117ef032165731c312958fc848d9b104f: |Sandbox| Source | ||| |[React]( Configuration | ",2021-02-03T15:08:04Z
657,772580499," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridexperimental; No significant bundle size changes to report. Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 3203821117ef032165731c312958fc848d9b104f </p ",2021-02-03T15:10:15Z
658,772580878," <! 0 failure: 0 warning: 2 markdown notices DangerID: dangeridstable; No significant bundle size changes to report. Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 3203821117ef032165731c312958fc848d9b104f </p ",2021-02-03T15:10:52Z
659,772648367,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA.",2021-02-03T16:40:07Z
660,772649998," <! 0 failure: 0 warning: 1 markdown notices DangerID: dangeridstable; Size changes <pComparing: b936ab660a82a936450f7742b2119cc30f54f97d...d679dc26a3813017892cd259565e5be95f50b92d</p Stable channel No significant bundle size changes to report. Experimental channel No significant bundle size changes to report. <p align=""right"" Generated by :no_entry_sign: <a href="" against d679dc26a3813017892cd259565e5be95f50b92d </p ",2021-02-03T16:42:19Z
661,772778220,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit ae1c4b8e2ded5f825a9ec6084c892438d2f4d329: |Sandbox| Source | ||| |[React]( Configuration | ",2021-02-03T19:51:42Z
662,772779560," <! 0 failure: 0 warning: 1 markdown notices DangerID: dangeridstable; Size changes <pComparing: 0935a1db3d2c1b9c2b09ea348d0db929757f9de0...ae1c4b8e2ded5f825a9ec6084c892438d2f4d329</p Stable channel No significant bundle size changes to report. Experimental channel No significant bundle size changes to report. <p align=""right"" Generated by :no_entry_sign: <a href="" against ae1c4b8e2ded5f825a9ec6084c892438d2f4d329 </p ",2021-02-03T19:54:06Z
663,772783257,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit cb12471345f79ba03d2e93db159d9aa4fba5880b: |Sandbox| Source | ||| |[React]( Configuration | ",2021-02-03T20:00:30Z
664,772784557," <! 0 failure: 0 warning: 1 markdown notices DangerID: dangeridstable; Size changes <pComparing: 0935a1db3d2c1b9c2b09ea348d0db929757f9de0...cb12471345f79ba03d2e93db159d9aa4fba5880b</p Stable channel No significant bundle size changes to report. Experimental channel No significant bundle size changes to report. <p align=""right"" Generated by :no_entry_sign: <a href="" against cb12471345f79ba03d2e93db159d9aa4fba5880b </p ",2021-02-03T20:02:40Z
665,772846935,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 5ea577a062f9c2d7a542543457ac2e88b45eb4e5: |Sandbox| Source | ||| |[React]( Configuration | ",2021-02-03T21:48:30Z
666,772888454,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 20aa1f55f7964d67b5edb0605959c0ad7ce4d818: |Sandbox| Source | ||| |[React]( Configuration | ",2021-02-03T23:06:38Z
667,772899989," <! 0 failure: 0 warning: 1 markdown notices DangerID: dangeridstable; Size changes <pComparing: 3be750eee9cda6c20fc3e69eb454215125609d37...20aa1f55f7964d67b5edb0605959c0ad7ce4d818</p Stable channel No significant bundle size changes to report. Experimental channel No significant bundle size changes to report. <p align=""right"" Generated by :no_entry_sign: <a href="" against 20aa1f55f7964d67b5edb0605959c0ad7ce4d818 </p ",2021-02-03T23:32:03Z
668,772900513,Going to merge this to unbreak ,2021-02-03T23:33:05Z
669,772903927," <! 0 failure: 0 warning: 1 markdown notices DangerID: dangeridstable; Size changes <pComparing: 00e38c80b28fd9b5e99b890d85e080edc2fcc49f...5ea577a062f9c2d7a542543457ac2e88b45eb4e5</p Stable channel No significant bundle size changes to report. Experimental channel No significant bundle size changes to report. <p align=""right"" Generated by :no_entry_sign: <a href="" against 5ea577a062f9c2d7a542543457ac2e88b45eb4e5 </p ",2021-02-03T23:40:54Z
670,772905179," <! 0 failure: 0 warning: 1 markdown notices DangerID: dangeridstable; Size changes <pComparing: 00e38c80b28fd9b5e99b890d85e080edc2fcc49f...cce24f6e5f4557144a6684af4a2a2392913a7e4e</p Stable channel No significant bundle size changes to report. Experimental channel No significant bundle size changes to report. <p align=""right"" Generated by :no_entry_sign: <a href="" against cce24f6e5f4557144a6684af4a2a2392913a7e4e </p ",2021-02-03T23:43:55Z
671,772911367,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit aa59e4fa9d59ebea9c2fea7bbe05429b77a36f4e: |Sandbox| Source | ||| |[React]( Configuration | ",2021-02-03T23:58:14Z
672,772912358," <! 0 failure: 0 warning: 1 markdown notices DangerID: dangeridstable; Size changes <pComparing: 00e38c80b28fd9b5e99b890d85e080edc2fcc49f...aa59e4fa9d59ebea9c2fea7bbe05429b77a36f4e</p Stable channel No significant bundle size changes to report. Experimental channel No significant bundle size changes to report. <p align=""right"" Generated by :no_entry_sign: <a href="" against aa59e4fa9d59ebea9c2fea7bbe05429b77a36f4e </p ",2021-02-04T00:00:42Z
673,772952633,"ok, thanks.",2021-02-04T01:21:31Z
674,772966342,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit ab3712d685ad3ab429d7f78c9daf094bcd2f5c97: |Sandbox| Source | ||| |[React]( Configuration | ",2021-02-04T01:58:53Z
675,772967230," <! 0 failure: 0 warning: 1 markdown notices DangerID: dangeridstable; Size changes <pComparing: 4c019585e875b4197519052604764652a1ccb06a...97daa527245129d94102182fa25e2a59a919df26</p Stable channel No significant bundle size changes to report. Experimental channel No significant bundle size changes to report. <p align=""right"" Generated by :no_entry_sign: <a href="" against 97daa527245129d94102182fa25e2a59a919df26 </p ",2021-02-04T02:01:03Z
676,772981964," Also you can put keyPressHandler function inside useEffect body and use setTest to getting previous state not from closure, but from second form with callback. const [text, setText] = useState(''); useEffect(() = { const keyPressHandler = (e) = { setText((text) = text + e.key); }; document.addEventListener('keydown', keyPressHandler); return () = { document.removeEventListener('keydown', keyPressHandler); }; }, []); Worked for me, thanks",2021-02-04T02:38:45Z
677,773005372," <! 0 failure: 0 warning: 1 markdown notices DangerID: dangeridstable; Size changes <pComparing: c64d6d21be19e179bd6a2d659fa78180051b577f...5e4b8bd011ed3c175775b6c1c67ea7a367da8181</p Stable channel No significant bundle size changes to report. Experimental channel No significant bundle size changes to report. <p align=""right"" Generated by :no_entry_sign: <a href="" against 5e4b8bd011ed3c175775b6c1c67ea7a367da8181 </p ",2021-02-04T03:43:55Z
678,773021883,"Unfortunately this isn't fixed yet, still working with the team to debug",2021-02-04T04:36:10Z
679,773040485," <! 0 failure: 0 warning: 1 markdown notices DangerID: dangeridstable; Size changes <pComparing: c64d6d21be19e179bd6a2d659fa78180051b577f...ae414c3d70114383c7c8f31518cc7c8ec34fd5c0</p Stable channel No significant bundle size changes to report. Experimental channel No significant bundle size changes to report. <p align=""right"" Generated by :no_entry_sign: <a href="" against ae414c3d70114383c7c8f31518cc7c8ec34fd5c0 </p ",2021-02-04T05:28:36Z
680,773057072,Too annoyed at how difficult CircleCI makes this to figure this out right now,2021-02-04T06:08:56Z
681,773232948,"Thanks for helping me find the actual problem, I'll close this issue now. I agree it would be nice with some sort of warning. In the end you're calling a version of dispatch that wasn't committed. But it's not clear if this would conflict with render phase updates. Which dispatch do you mean here? Do you have pointers to any resources for learning more about the internals of how this works. Would be fun to try and work out exactly what's happening, but think I have some knowledge gaps I need to fill first.",2021-02-04T11:19:23Z
682,773270794," As suggested in the warning message, you can do like that const initFetch = useCallback(() = { dispatch(fetchPosts()); }, [dispatch]); useEffect(() = { initFetch(); }, [initFetch]); This is what solved my problem. Don't forget to import React, { useCallback } from ""react"" ",2021-02-04T12:29:58Z
683,773328100,"1. All state should be stored in the useRef of useState hooks. js const someGlobalCache = new Map() // wrong export function useMyHooks() { // do something with global cache } 2. All states should be immutable (important!) During the concurrent rendering, React will copy refs and states by reference (in my understanding). So any mutation will cause bugs in the concurrent mode. js function useX() { const ref = useRef({}) useEffect(() = { ref.current.xyz = 1 // Wrong! ref.current = { ...ref.current, xyz: 1 } // Safe }) } (Originally posted in Does my understanding right? Thanks!",2021-02-04T14:09:44Z
684,773395815,"I'm sorry you experienced this bug!  Looks like this problem was already reported though () so I'm going to mark this issue as a duplicate and close it. If you have additional context that might help us repro this problem, please leave a comment on the other issue! Thank you",2021-02-04T15:31:43Z
685,773426134," <! 0 failure: 0 warning: 1 markdown notices DangerID: dangeridstable; Size changes <pComparing: 365080f4f592c813f8ebd8bc4118802cd5d3b254...422f4c2f2f75cd8573ff2785961671823661a159</p Stable channel No significant bundle size changes to report. Experimental channel No significant bundle size changes to report. <p align=""right"" Generated by :no_entry_sign: <a href="" against 422f4c2f2f75cd8573ff2785961671823661a159 </p ",2021-02-04T16:14:21Z
686,773432657,Thanks for the suggestion but I believe [this is correct](,2021-02-04T16:23:24Z
687,773432964,Fixed!,2021-02-04T16:23:48Z
688,773433326,:),2021-02-04T16:24:17Z
689,773472287," <! 0 failure: 0 warning: 1 markdown notices DangerID: dangeridstable; Size changes <pComparing: b12d0078a4503a2e4397e65c9060df56193d7b27...85d8de68afd0ab7e183309990b642b4fb3a0433a</p Stable channel No significant bundle size changes to report. Experimental channel No significant bundle size changes to report. <p align=""right"" Generated by :no_entry_sign: <a href="" against 85d8de68afd0ab7e183309990b642b4fb3a0433a </p ",2021-02-04T17:19:20Z
690,773478863,Can we somehow detect a oneshot iterator? Maybe some check like x[Symbol.iterator]() === x should warn when true?,2021-02-04T17:29:37Z
691,773480897,I really think it was a mistake for .values() to behave this way when it could've been an iterable. (.NET got it right as usual.),2021-02-04T17:32:48Z
692,773583641,"We're sorry about this problem. We only just became aware of it within the last few minutes. Since it is a Code Sandbox issue (and not a React issue) I'm going to go head and close this issue here, but the React team has notified the Code Sandbox team and they are currently working to resolve the issue.",2021-02-04T20:27:32Z
693,773588456,"All state should be stored in the useRef of useState hooks. I don't know what you mean by this. If you mean the Cache, no, it should not be stored in either of these, because they get destroyed when Suspending before mount. We have some builtin helpers to hold the Cache coming later, but they're not a stable API yet. You can look at the Server Components demo to see how they can be wired up in experimental releases.",2021-02-04T20:36:38Z
694,773590862,"Maybe this example can help: Again, note these are experimental APIs and we don't recommend building anything on top of them at the moment.",2021-02-04T20:41:10Z
695,773610777,"This should be fixed now, big shout out to the Code Sandbox team for fixing this so quickly!",2021-02-04T21:19:50Z
696,773655071,any love for this PR? ,2021-02-04T22:50:39Z
697,773780968," It'd suggest you explore Number.range returning an iterable that can produce multiple iterators over the same range since the input range is immutable. Yes, we explored this a lot but it's hard to change to iterable instead of oneshot iterator (see discussion in and ",2021-02-05T04:34:21Z
698,773800223,"I definitely support the iterable but others don't agree. And whatever semantic the range proposal choose, if you want to make it useful in React, it's must be used with iterator helper. And the iterator helper proposal doesn't work with iterable, it's always returned a one shot iterator. ",2021-02-05T05:32:12Z
699,773801859,Unfortunately there's nothing we can do to support it but we can create a more descriptive error message.,2021-02-05T05:36:18Z
700,773813812," Can we somehow detect a oneshot iterator? Maybe some check like x[Symbol.iterator]() === x should warn when true? Since react consume the iterator twice, react can warn if the second consume doesn't get the same array length as the first consume",2021-02-05T06:06:00Z
701,773887548," After some research of react source code, I got a hack method for react 16: let input = someInput; let lastValue = input.value; input.value = 'new value'; let event = new Event('input', { bubbles: true }); // hack React15 event.simulated = true; // hack React16 内部定义了descriptor拦截value，此处重置状态 let tracker = input._valueTracker; if (tracker) { tracker.setValue(lastValue); } input.dispatchEvent(event); NOTICE: JUST A HACK you saved my day, thanks",2021-02-05T08:45:54Z
702,773928532," If this doesn't look right, please let me know. Just FYI: I also experienced this bug and it was triggered by exactly the scenario you have mentioned.",2021-02-05T09:59:43Z
703,773945843,"Thanks for the report. Note that you get a warning about invalid DOM nesting for React 16 and 17. The current behavior might've been broken in but I can't speak to whether this was intentional or not and if the new behavior should stay. With native HTML the child will never be submitted but every submit button inside that form submits the parent: What do you think about the new behavior compared to ""native"" behavior?",2021-02-05T10:30:11Z
704,774075176,"Thanks, but this is intentional because there's less chance of lowlevel shenanigans due to != also implying a check against document.all.",2021-02-05T14:44:44Z
705,774131276," <! 0 failure: 0 warning: 1 markdown notices DangerID: dangeridstable; Size changes <pComparing: b12d0078a4503a2e4397e65c9060df56193d7b27...87c672fd3636069a42402bb928ba29950c8d4f0d</p Stable channel No significant bundle size changes to report. Experimental channel No significant bundle size changes to report. <p align=""right"" Generated by :no_entry_sign: <a href="" against 87c672fd3636069a42402bb928ba29950c8d4f0d </p ",2021-02-05T16:15:51Z
706,774145350,"I haven't looked into why this is happening, seems unintuitive to me. I've noticed that when I click on the inner form, React only receives the _captured_ event, but not the bubbled one. Any ideas why?",2021-02-05T16:39:42Z
707,774199070," My library and the createreactapp are relative to each other and I am using npm link Did you read this part? It directly addresses the link workflow: <img alt=""Screen Shot 20190404 at 09 28 47"" width=""677"" src="" Thanks a lot for saving my ass <3",2021-02-05T18:12:54Z
708,774235390," <! 0 failure: 0 warning: 1 markdown notices DangerID: dangeridstable; Size changes <pComparing: eeb1325b03388184f61796ccf57835d33739249a...1258478e3e5f2c990f583da7a55f1b15758af769</p Stable channel No significant bundle size changes to report. Experimental channel No significant bundle size changes to report. <p align=""right"" Generated by :no_entry_sign: <a href="" against 1258478e3e5f2c990f583da7a55f1b15758af769 </p ",2021-02-05T19:17:47Z
709,774271663,Strange. Removing the changes causes the bundle size to go up?,2021-02-05T20:30:21Z
710,774272917,"I think something is wrong. is supposed to increase the size, but it shows a decrease. The summary (0% change) also doesn't match what the table is reporting.",2021-02-05T20:32:37Z
711,774273479,Strange. Removing the changes causes the bundle size to go up? Our sizebot seems borked by recent changes. See which increases the size but shows as a decrease. ,2021-02-05T20:33:52Z
712,774279063,"Hey , I am experiencing a similar issue where in dev mode (CRA / npm start), both the <img src and <source srcSet images are loaded in Firefox (failover loads first). This issue is gone when I run npm run build and serve my app using Express. In your example, have you noticed if the WebP image is loaded vs the failover?",2021-02-05T20:45:12Z
713,774283849," the failover .jpg is being requested and partially fetched, and the .webp is fully loaded and eventually displayed.",2021-02-05T20:55:34Z
714,774345731," <! 0 failure: 0 warning: 1 markdown notices DangerID: dangeridstable; Size changes <pComparing: 4ecf11977c46966d3deedcdc71f1280a34607d1d...fc4129ad722608bd518b63c164096c913b8024f8</p Stable channel No significant bundle size changes to report. Experimental channel No significant bundle size changes to report. <p align=""right"" Generated by :no_entry_sign: <a href="" against fc4129ad722608bd518b63c164096c913b8024f8 </p ",2021-02-05T23:38:00Z
715,774346722,"Ok it's fixed now, but we should really change the output to sort by magnitude, or something like that. Really easy to miss a significant change if it's not to the main bundle. <img width=""837"" alt=""Screen Shot 20210205 at 5 41 51 PM"" src="" ",2021-02-05T23:41:36Z
716,774347635,"Also this part is clearly wrong. Maybe it's grabbing ReactDOMServer accidentally ReactDOM: size: 0.0%, gzip: 0.0% I think what I'd do is sort the bundles by magnitude and collapse the ones that are below a certain threshold.",2021-02-05T23:45:00Z
717,774432800,"Hi there! thx for describing an issue, as u mention below, users of Reatom have the same problems. please, may you comment detailed description of the problem and how it may be solved and paste it in the docs? This is soo unobvious right now, but important for many people, which just remove StrictMode that does not look like a better way. ",2021-02-06T09:29:20Z
718,774485633," Can someone review this pull request? If it's not ok I will close it , Thanks.",2021-02-06T14:28:13Z
719,774496707,"cool thanks, is this correct? ",2021-02-06T15:45:46Z
720,774515004,"It looks like it is something that would be easy to support, but the question is: why would you do that?",2021-02-06T17:53:19Z
721,774534381,Can we move the OSS bundles first? The FB ones are a bit misleading because there’s no rewriting pass. ,2021-02-06T20:03:03Z
722,774537200,in my project i simply changed .js to .jsx and the problem was gone!,2021-02-06T20:15:53Z
723,774614544,"Looks like this problem was already reported though () so I'm going to mark this issue as a duplicate and close it. If you have additional context that might help us repro this problem, please leave a comment on the other issue!",2021-02-07T06:31:27Z
724,774652364,"The same problem in react native( js const onScroll = useCallback( Animated.event([ { nativeEvent: { contentOffset: { y: animatedScrollY }, }, }, ]), [animatedScrollY], ); Seems need to use useMemo(() = Animated.event(...),[]) instaed",2021-02-07T10:46:59Z
725,774664983, Is there any solution to this issue? I just updated to 16.6.0 but still facing this issue. Please suggest any possible working solution. you can delete the static variable from the wrapped class and keep the static property in the innerComponent only for example: you can assign static variable like this: IssueRowPlain.contextType = UserContext; wrap the component const IssueRow = withRouter(IssueRowPlain); then delete the static variable from result wrapped component delete IssueRow.contextType; ,2021-02-07T12:16:55Z
726,774688666,"There was already a thread tracking this but I can’t find it. Maybe the author got blocked by GitHub. We do plan to switch to main but there were some tooling updates that needed to be rolled out first for the transition to be smooth. I think that’s mostly done now but would need to doublecheck. In the meantime I’ll lock this thread because unfortunately threads like this often attract trolls, and we don’t want to spam people watching the repo. ",2021-02-07T15:01:01Z
727,774731819,"I have also had trouble using the br tag in the past in React. To elaborate on the issue, using br in JSX requires that you provide a closing tag for it: <br</br Otherwise, I would receive the syntax error Expected corresponding JSX closing tag for <br. Was that also your experience ? ",2021-02-07T18:50:48Z
728,774734194,"Hey , thanks for resolving the issue for me. The closing tag did fix the issue but I was wondering if this rule was some JSX development negligence or if there's a particular reason to have a rule like that?",2021-02-07T19:00:33Z
729,774743858," Someone can correct me on this if I'm wrong, but from what I understand, JSX expects elements with no children (eg. br, input, img) to either be written as: <br / or <br</br It's more favorable to actually use the former version since it's more concise. I should have used that in my previous comment. Details can be found in this discussion :",2021-02-07T19:35:20Z
730,774876160,Waiting for ESModule export of react!,2021-02-08T05:26:23Z
731,775100031,"Is there a fix in progress, for upcoming versions, for this bug? I am facing this issue , which cant be resolved because of this.",2021-02-08T12:08:35Z
732,775204763," I'm consolidating these few places to match the Lane terminology (which we tend to use in the informal discussions): Discrete (e.g. click) Continuous (e.g. mousemove) Default (e.g. load) I understand the difference/significance between userblocking events like click and mousemove, but conceptually it seems like there's also an important difference between events like load (which seems discrete) and progress (which seems continuous) so it seems odd to me to see those collapsed into one category of ""default"".",2021-02-08T14:53:32Z
733,775206138,"conceptually it seems like there's also an important difference between events like load (which seems discrete) and progress (which seems continuous) so it seems odd to me to see those collapsed into one category of ""default"". Just to be clear, this is not new, right? They weren't really ""continuous"" in the Reconciler sense of the word, so that's what I'm amending.",2021-02-08T14:55:31Z
734,775207102,"Maybe another way to think of default is ""NonUserInput"". Discrete and continuous are triggered by the user, the rest are triggered by the system. Since they're triggered by the system, the user can't have specific expectations about their order or deadline.",2021-02-08T14:57:00Z
735,775209638,"Sure, we could do that, but we'd never have discrete nonuserblocking events. So it's not exactly a matrix but more like three groups. Userblocking (discrete vs not), and nonUB.",2021-02-08T15:00:42Z
736,775210344,"But also, I didn't really mean to align naming _everywhere_, I just want to align the Events naming with existing naming in Event Replaying and Reconciler. Not change all three necessarily.",2021-02-08T15:01:42Z
737,775213625," Sure, we could do that, but we'd never have discrete nonuserblocking events. So it's not exactly a matrix but more like three groups. Userblocking (discrete vs not), and nonUB. I see. One thing I'm still a little confused about (and feel free to tell me to just read the code) is the expected behavior for events that are _conceptually_ both nonuserblocking _and_ continuous. For instance ""progress"" events. Do we just queue up and fire a ton of them and rely on our batching mechanisms to smash them all into a small number of commits?",2021-02-08T15:06:27Z
738,775216337," I am facing this issue muiorg/materialui , which cant be resolved because of this. Could you explain in the MaterialUI issue why this can't be resolved for you? We were under the impression that we worked around this bug for our specific usage. For updates on a fix, is the latest update. From what I gather the team is already experimenting with potential fixes. You can subscribe to this ( github issue to get notified about updates. Asking for updates does not speed up delivery of said update.",2021-02-08T15:10:37Z
739,775219455," No. There is no current alternative for the User Timing marks that used to be in React DEV builds. Typically we suggest using the React DevTools Profiler instead but for your use case that wouldn't really be relevant. We have some ongoing efforts on building a new profiling tool that would be similar to the user marks, which you can read about (and even beta test) [here]( but I don't expect we'll release this in a more stable format for at least a few months because of competing priorities.",2021-02-08T15:15:10Z
740,775229086,"I've made [a small library to deal with this]( it allows you to write code like javascript componentDidMount() { // Restore the component state as it was stored for key '3' in section 'page' // // You can choose 'section' and 'key' freely, of course. this.setState(this.props.componentstate.get('page', 3)) } componentDidUnmount() { // store this state's component in section 'page' with key '3' this.props.componentstate.set('page', 3, this.state) } which would be useful for a number of use cases, for example multipage forms. Hope it is of use to someone.",2021-02-08T15:28:41Z
741,775253646,"I think they're subject to the same batching and deadlines that regular setState (e.g. in AJAX callbacks) are. So it's just regular batching behavior, the baseline. Userblocking are special because they have a tighter deadline, and discrete in particular are special because each corresponds to a concrete user input, so we can't batch them.",2021-02-08T16:05:10Z
742,775347723,I'll add myself as a reviewer to reminder myself at some point in the future but I'm pretty swamped right now so I'm not committing to look any time soon. It doesn't hurt anything to leave the PR open so I suggest you just do that. :),2021-02-08T18:24:04Z
743,775481471,Note I added tests for all of these events in ReactDOMEventPropagationtest.js a while ago so we should be safe.,2021-02-08T21:40:17Z
744,775489981,"I've noticed that when I click on the inner form, React only receives the captured event, but not the bubbled one. Any ideas why? ^^ I would start the investigation here.",2021-02-08T21:56:38Z
745,775514743,"Sorry, it's my fault. Thanks for your advices.",2021-02-08T22:46:56Z
746,775696664,Still the React devtools v4.10.1 on firefox developer edition v86.0b7 is not working in private mode and showing the same message Unable to find React on the page,2021-02-09T06:12:13Z
747,775736551,"The above comment doesn't say where it is being assigned i.e. the left side of the assignment. I assigned the above solution in this way: <MyReactComponent.propTypes = React.PropTypes.oneOfType([ React.PropTypes.shape({ width: React.PropTypes.number.isRequired }), React.PropTypes.shape({ widthOffset: React.PropTypes.number, minWidth: React.PropTypes.number.isRequired }), ]) And React shows a warning saying that isRequired property is required. Using React 16.3.1. Another question: How do I use use this exclusiveor properties inside the PropTypes.shape when I do not know the property where it is going to be assigned i.e. the left side of the assignment.",2021-02-09T07:37:13Z
748,775908974, Just ran into this as well. Assuming this still isn't supported? The promise never resolves and the suspense state always renders the fallback. ,2021-02-09T12:42:22Z
749,775965194,+1 for a docs reference,2021-02-09T14:08:52Z
750,776076606,anyone seeing this in react 17 as well? seeing what seems like a similar issue in an app on react 17. trying the latest 16 to compare. ,2021-02-09T16:45:20Z
751,776076665,anyone seeing this in react 17 as well?,2021-02-09T16:45:26Z
752,776130146," 1. On initializing dev tools for react components This isn't enough info for one of us to investigate the issue. Can you please provide more context? Please provide a CodeSandbox ( a link to a repository on GitHub, or provide a minimal code example that reproduces the problem. Screenshots or videos can also be helpful if they help provide context on how to repro the bug. Here are some tips for providing a minimal example: ",2021-02-09T18:03:53Z
753,776148820,Gonna do the rest in followups.,2021-02-09T18:32:27Z
754,776191029,"If you're willing to use css you could put the dynamic image urls in css vars via the style tag and then read those in your static css. js <Component style={{""image1"": ""foo.jpg"", ""image1x"": ""foo1x.jpg"", ""image2x"": ""foo2x.jpg""}} className=""image"" / css .image { backgroundimage: url(image1); backgroundimage: webkitimageset(url(image1x) 1x, url(image2x) 2x) } ",2021-02-09T19:38:20Z
755,776204555,"I'd love to find a solution (or at least workaround) for this issue. It persists on Next.js without snowpack, only using reactrefresh. See ",2021-02-09T20:01:59Z
756,776212586,"I pushed a suggestion to your PR branch, not sure why it's not showing up here but this is it: Spoke too soon, GitHub updated now :D",2021-02-09T20:11:44Z
757,776254776,I have this tab open for review soonish...,2021-02-09T21:26:23Z
758,776262074," Thank you! That's very clever. I'll close this issue because this fixes the React side of things. Turns out it doesn't quite work in my case anyway, but for reasons not directly related to React. (Using two backgroundimage declarations works fine to achieve a fallback normally, but if I introduce CSS variables, Firefox stops falling back and fails to get a background image at all.) Asked about this [on Stack Overflow](",2021-02-09T21:40:03Z
759,776291625,Hmm. Will most users run their tests in an environment with window.event? What does JSDOM do? How will React Testing Library work? Maybe we should warn if it's undefined? Though then we need some guidance for fixing it.,2021-02-09T22:37:53Z
760,776297740,Hmm yeah good point. The answer is I have no idea. I'll ask Twitter.,2021-02-09T22:51:43Z
761,776301876,"Did you mean ""Land"" in the title?",2021-02-09T23:01:40Z
762,776304879,Ahaha yes,2021-02-09T23:07:42Z
763,776308176,"Maybe we should warn if it's undefined? How would you know you're in an event though? What does JSDOM do? Seems like it doesn't do anything, as it's sort of a legacy property. At least our version doesn't. How will React Testing Library work? I think RTL could do something like this as part of its setup. Or in its fireEvent wrapper.",2021-02-09T23:14:11Z
764,776341626,Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Facebook open source project. Thanks!,2021-02-10T00:30:15Z
765,776356795,"Potential work around for mobx is to use <Observer / component instead of observer hoc, for example your old component: const Component = observer(() = { return <divHello</div }) will become like this: const Component = () = { return <Observer{() = ( <divHello</div )}</Observer } ",2021-02-10T01:08:55Z
766,776406605,"The React repository does not include anything TypeScriptspecific. If this is a bug, it's either in TypeScript itself, or in the React bindings which are maintained in the DefinitelyTyped repository. Please file an issue there. Thanks!",2021-02-10T03:08:12Z
767,776411433,"Sadly, it doesn't work in my case. I've tried arrow functions, Observer component and HOC: neither of them do the trick, the checkbox stays checked after refresh either way.",2021-02-10T03:23:39Z
768,776412511,"Support requests filed as GitHub issues often go unanswered. We want you to find the answer you're looking for, so we suggest the following alternatives: Coding Questions If you have a coding question related to React and React DOM, it might be better suited for Stack Overflow. It's a great place to browse through frequent questions about using React, as well as ask for help with specific questions. [ Talk to other React developers There are many online forums which are a great place for discussion about best practices and application architecture as well as the future of React. [",2021-02-10T03:26:37Z
769,776413683,"This pull request is automatically built and testable in [CodeSandbox]( To see build info of the built libraries, click [here]( or the icon next to each commit SHA. Latest deployment of this branch, based on commit 19e2a005fa93963e8d0a277741ad4b067faa0190: |Sandbox| Source | ||| |[React]( Configuration | ",2021-02-10T03:30:06Z
770,776414283," <! 0 failure: 1 warning: Could not find bu... 1 markdown notices DangerID: dangeridstable; <table <thead <tr <th width=""50""</th <th width=""100%"" datadangertable=""true""Warnings</th </tr </thead <tbody<tr <td</td <tdCould not find build artifacts for base commit: 7cb9fd7ef822436aef13c8cbf648af1e21a5309a</td </tr </tbody </table Size changes (stable) <p align=""right"" Generated by :no_entry_sign: <a href="" against 19e2a005fa93963e8d0a277741ad4b067faa0190 </p ",2021-02-10T03:31:32Z
771,776414311," <! 0 failure: 1 warning: Could not find bu... 1 markdown notices DangerID: dangeridexperimental; <table <thead <tr <th width=""50""</th <th width=""100%"" datadangertable=""true""Warnings</th </tr </thead <tbody<tr <td</td <tdCould not find build artifacts for base commit: 7cb9fd7ef822436aef13c8cbf648af1e21a5309a</td </tr </tbody </table Size changes (experimental) <p align=""right"" Generated by :no_entry_sign: <a href="" against 19e2a005fa93963e8d0a277741ad4b067faa0190 </p ",2021-02-10T03:31:36Z
772,776416091," This reveals that some of our tests actually do fail as a result of this change, which makes sense, because our mock Scheduler flushing doesn't occur inside a message event. would fix it though. Maybe we should go ahead and land that one? And figure out how it affects open source as a follow up. EDIT: Nvm, I guess alone would not fix it but if we have the mock Scheduler set window.event.type === 'message' then it would.",2021-02-10T03:36:47Z
773,776417000,"But the better fix is to rewrite our tests to not rely on Scheduler to set the priority, so I'll do that.",2021-02-10T03:39:47Z
774,776419075,Nice find! Do you want to submit a PR to fix?,2021-02-10T03:47:32Z
775,776439810,I already created PR. ,2021-02-10T04:50:11Z
776,776526794,I would love to help you on fixing this problem.Can you guide me in submitting a fix? I am really new to open source. ,2021-02-10T08:15:10Z
777,776555018, Can I take this issue for try to fix it and send PR?,2021-02-10T09:06:05Z
778,776709294,"I opened a draft pull request Improvements are significant. I use [ for profiling. This implementation uses a 32bit number as a bitset. If there are more than 32 contexts, it falls back to the current logic. Choices are: Keep the 32bit number, only 32 contexts are optimized Implement a Hash Array Mapped Trie style ""HashSet"" which can be highly optimized for this scenario. Use bigint If a HashSet or bigint are used, it is possible to remove the propagateContextChange. Instead, we can check contexts while reconciler walking down the tree. before ![屏幕截图 20210210 211229]( after ![屏幕截图 20210210 211602]( ",2021-02-10T13:34:57Z
779,776710425,I noticed that the bubbleProperties spent a lot of time on my branch. It seems that I missed something related to bailouts.,2021-02-10T13:36:59Z
780,776798542,Issue example: js var { JSDOM } = require('jsdom') var { window } = new JSDOM() global.window = window global.document = window.document require('scheduler') ,2021-02-10T15:37:47Z
781,776871518,"Thanks for the PR! I don't think this approach would work for us because then you have a performance cliff as soon as you have more than 32 contexts. We generally prefer predictable performance over ""fast in some cases"", because otherwise seemingly small changes can have disproportionate impact on the whole application, and it becomes very difficult to debug perf problems.",2021-02-10T17:14:57Z
782,776882021,"Hey all, anyone can take this issue, I'll review the first PR. The problem is that [this feature detection]( is too naive. In node environments, we should use unstable_no_dom and in browser environments we should use the browser scheduler. ",2021-02-10T17:30:22Z
783,776994276," I don't think this would work as we want. E.g. it would probably detect React Native as ""DOM"". While a webpack config that has a process shim would be detected as ""no DOM"". I got it, i will change it",2021-02-10T20:13:57Z
784,777034599,"tock just found it today, these nodes number comes back after few rerenderes but still very tricky thing",2021-02-10T21:04:15Z
785,777051531,"I eventually found it via heap snapshots, so my case was not react related.",2021-02-10T21:34:18Z
786,777101672,"This does not appear reproducible in a sandbox using the build from That PR enables some flags that aren't enabled yet, but will be closer to the release. Essentially, they make discrete events (including focus/blur) flush in a microtask. I think we can close this since it's not directly actionable, but it will take some time before this behavior gets to an experimental build because we need to do more testing. Thanks for raising this!",2021-02-10T23:18:16Z
787,777102210,In short: Duplicate of I don't think this was correct. I believe is specific to Concurrent Mode (and the fix there is unrelated to normal 16).,2021-02-10T23:19:39Z
788,777102897,Want to try rebasing? I think this is fixed because discrete events are now flushed early. The fix is under the enableDiscreteEventMicroTasks flag.,2021-02-10T23:21:26Z
789,777105430,"This appears to be fixed with some flags we're planning to enable. Here's the sandbox demonstrating it (note it's built from rather than experimental because those flags aren't yet enabled in an experimental npm release). CM version looks fixed. There's still an issue with the Blocking Mode version, but we'll be addressing it separately in a different way.",2021-02-10T23:28:07Z
790,777106665,"Here's the reduced sandbox, also fixed when the same flags are enabled. ",2021-02-10T23:31:11Z
791,762524088,It seems like I do not have permissions to reopen it. Could you please reopen it?,2021-01-19T00:13:39Z
792,762533163,"Does using useMemo on _blockA_ and _blockB_ child components from the first example, prevent its rerender?",2021-01-19T00:47:03Z
793,762550193,Concise version of this bug is opened: ,2021-01-19T01:52:01Z
794,762550726," thanks for the detailed information, I'll reply on the new issue.",2021-01-19T01:54:05Z
795,762551561," thanks for submitting, continuing the discussion from It's very common for stack traces to point to React internals where the issue is sourced in user code. Since you're the expert of the way your library works, can you strip down the example to use vanilla React?",2021-01-19T01:57:15Z
796,762554475," Does using useMemo on _blockA_ and _blockB_ child components from the first example, prevent its rerender? No. That memoizes the JSX and can have a similar effect to memo. But it doesn't provide any sort of unique ID to the tree and React will not move the tree when it changes parents.",2021-01-19T02:08:00Z
797,762555210,"Have you seen the code in the demo repo? I stripped down the example to just that: tsx export function useState() { React.useState(0); React.useEffect(() = { return () = {} }); } This is vanilla react, there is nothing left from Hookstate really. And this hook causes the crash if used twice in a component. I can not make it smaller than this. Is it good enough?",2021-01-19T02:10:50Z
798,762556457,"Here is the complete reproducer in 16 lines of vanilla react code: tsx import React from 'react'; function useState() { React.useState(0); React.useEffect(() = () = {}); } function Counter() { useState(); React.useState(0); return <divOpen React Dev Tools Components panel, click on Counter component and observe the crash in the logging console.</div; } export default Counter; ",2021-01-19T02:15:33Z
799,762558174,I have updated the original description too. There is nothing left from Hookstate in the above 16 lines of vanilla react code.,2021-01-19T02:20:25Z
